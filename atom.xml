<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Darren Blog</title>
  
  <subtitle>来找我友链啊！功能持续增加中</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-11T11:38:38.815Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Darren</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>html</title>
    <link href="http://example.com/2021/03/11/html/"/>
    <id>http://example.com/2021/03/11/html/</id>
    <published>2021-03-10T16:12:05.000Z</published>
    <updated>2021-03-11T11:38:38.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h1 id="HTML基础排版"><a href="#HTML基础排版" class="headerlink" title="HTML基础排版"></a>HTML基础排版</h1><p>[toc]</p><h2 id="html简介和语义"><a href="#html简介和语义" class="headerlink" title="html简介和语义"></a>html简介和语义</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;Chris Mills&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;The MDN Web Docs Learning Area。。。这是搜索引擎显示的</span></span></span><br></pre></td></tr></table></figure><p><a href="http://ogp.me/">Open Graph Data</a>是Facebook发明的一种元数据协议，旨在为网站提供更丰富的元数据</p><p>可以通过以下方式将收藏夹图标添加到您的页面：</p><ol><li><p>将其保存在与网站的索引页相同的目录中，并以<code>.ico</code>格式保存（大多数浏览器将以更常见的格式（例如<code>.gif</code>或）支持网站<code>.png</code>图标，但使用ICO格式将确保其可追溯至Internet Explorer6。）</p></li><li><p>将以下行添加到您的HTML</p><p><code>&lt;head&gt;</code></p><p>块中以引用它：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>在外部示例中，我们使用一种更现代的JavaScript功能来解决问题，即<code>defer</code>属性，该属性告诉浏览器<code>&lt;script&gt;</code>在到达tag元素后继续下载HTML内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这种情况下，脚本和HTML将同时加载，并且代码将起作用。</p><p><strong>注意</strong>：在外部情况下，我们不需要使用<code>DOMContentLoaded</code>事件，因为该<code>defer</code>属性为我们解决了问题。<code>defer</code>对于内部JavaScript示例，我们没有使用该解决方案，因为它<code>defer</code>仅适用于外部脚本。</p><p>这个问题的老式解决方案曾经是将脚本元素放在正文的底部（例如，紧接在<code>&lt;/body&gt;</code>标记之前），以便在解析所有HTML之后将其加载。该解决方案的问题在于，脚本的加载/解析被完全阻止，直到HTML DOM被加载为止。在具有许多JavaScript的大型网站上，这可能会导致严重的性能问题，从而降低您的网站速度。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en-US&quot;</span>&gt;</span><span class="comment">&lt;!--设置文档主要语言--&gt;</span>zh-Hans （简体中文）zh-CN</span><br></pre></td></tr></table></figure><p>html重要的是含义！</p><p><em>强调</p><p><strong>特别重要</p><ul><li><i>用于传达传统上由斜体表示的含义：外来词，分类名称，技术术语，思想…</li><li><b>用于传达传统上由粗体表示的含义：关键字，产品名称，主句…</li><li><u>用于传达传统上由下划线传达的含义：专有名称，拼写错误…</li></ul><p>关于下划线的一种警告：<strong>人们将下划线与超链接紧密关联。</strong>因此，在Web上，最好仅对链接加下划线。在<code>&lt;u&gt;</code>语义上适当时使用该元素，但请考虑使用CSS将默认下划线更改为Web上更合适的内容。</p><h2 id="html超链接"><a href="#html超链接" class="headerlink" title="html超链接"></a>html超链接</h2><p>href：’url’</p><p>title：提醒，当鼠标hover时显示</p><p>在<a>标签中加入别的元素可使用区块级链接，省略url则是当前网站</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.mozilla.org/en-US/&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;mozilla-image.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;mozilla logo that links to the mozilla homepage&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在src后紧跟选择器可以选择链接道文件片段</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;contacts.html#Mailing_address&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&gt;链接到id是Mailing_address的地方&lt;/--&gt;</span></span><br></pre></td></tr></table></figure><p><em><strong>好的</strong>连结文字：</em><a href="https://firefox.com/">下载Firefox</a></p><p><em><strong>不好的</strong>连结文字：</em><a href="https://firefox.com/">点这里</a>来下载Firefox</p><ul><li><p>让你的连结越短越好— 太长的连结会使萤幕阅读器的使用者蒙受其害，因为他们必须从头听到尾。</p></li><li><p>尽量让连结的文字不一样，太多重复的连结文字会带给萤幕阅读器的使用者麻烦，因为他们可能会从一个连结表中选择连结，因此若有许多重复的「点这里」会让他们相当困惑。</p></li><li><p>尽可能使用相对连接来增强代码可读性和效率</p></li><li><p>连接到非HTML资源时要说明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.example.com/large-report.pdf&quot;</span>&gt;</span></span><br><span class="line">  下載銷售報告(PDF, 10MB)</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.example.com/car-game&quot;</span>&gt;</span></span><br><span class="line">  遊玩賽車遊戲(需要 Flash)</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>当你连结一个需要下载的资源时，你可以使用<code>download</code>属性来提供一个预设的储存档名。以下范例是最新版的Windows版Firefox的下载连结：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://download.mozilla.org/?product=firefox-latest-ssl&amp;os=win64&amp;lang=en-US&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">download</span>=<span class="string">&quot;firefox-latest-64bit-installer.exe&quot;</span>&gt;</span></span><br><span class="line">  下載Windows上的最新版Firefox (64-bit) (English, US)</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>你可以建立一个连结或按钮，使得它被点击之后，开启一个正在撰写中的电子邮件讯息。这可以透过<a href="https://developer.mozilla.org/zh-TW/docs/Web/HTML/Element/a">``</a>元素和<code>mailto:</code>URL scheme来达成。</p><p>多数情况<code>mailto:</code>会填入收信人的电子邮件地址。例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:nowhere@mozilla.org&quot;</span>&gt;</span>Send email to nowhere<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>你可以建立一个连结或按钮，使得它被点击之后，开启一个正在撰写中的电子邮件讯息。这可以透过<a href="https://developer.mozilla.org/zh-TW/docs/Web/HTML/Element/a">``</a>元素和<code>mailto:</code>URL scheme来达成。</p><p>多数情况<code>mailto:</code>会填入收信人的电子邮件地址。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;mailto:nowhere@mozilla.org&quot;&gt;Send email to nowhere&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>它的结果会像是这样：<a href="mailto:nowhere@mozilla.org">Send email to nowhere</a>。</p><p>事实上，电子邮件地址是选填的。如果你将它留空(也就是说，你的<a href="https://developer.mozilla.org/zh-TW/docs/Web/HTML/Element/a#attr-href"><code>href</code></a>只写了”mailto:”)，使用者的mail client会开启一个寄信视窗，其中并没有指定收信人，这在使用「分享」连结时非常有用，使用者可以自行决定要寄给谁。</p></li><li><p>除了电子邮件地址之外，你还可以提供其他资讯，事实上，任何标准的邮件标头栏位都能被加到 <code>mailto</code>URL中，常见的有主旨(subject)、副本(cc)以及主体(body) (这个虽然不是真的标头栏位，但能让你放一条简短的讯息在新邮件的主体中)。每个栏位与它的值被定义成一组查询项(query term)。</p><p>下面是一个包含cc、bcc(密件副本)、subject 和body 的范例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&amp;bcc=name3@rapidtables.com&amp;subject=The%20subject%20of%20the%20email&amp;body=The%20body%20of%20the%20email&quot;</span>&gt;</span></span><br><span class="line">  Send mail with cc, bcc, subject and body</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>**Note:**每一个栏位的值必须以URL编码，也就是将空白及不可印字元(不可见的字元如缩排(tabs)、回车(carriage return )、换页(page breaks)等等)转换成<a href="http://en.wikipedia.org/wiki/Percent-encoding">百分号编码</a>。也请注意这里使用问号( <code>?</code>)来分隔主要URL和其他栏位；以&amp;来分隔<code>mailto:</code>URL中的不同的栏位，这是标准的URL查询记号(query notation)。你可以阅读<a href="https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data#the_get_method">GET方法</a>来得知有那些常用的查询记号。</p></li></ul><h2 id="html高级文本"><a href="#html高级文本" class="headerlink" title="html高级文本"></a>html高级文本</h2><ul><li><p>说明列表使用与其他列表类型不同的包装器- <dl>另外，每个术语都包装在<dt>（描述术语）元素中，每个描述都包装在<dd>（描述描述）元素中。</p></li><li><p>Quatation（块）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">cite</span>=<span class="string">&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>The <span class="tag">&lt;<span class="name">strong</span>&gt;</span>HTML <span class="tag">&lt;<span class="name">code</span>&gt;</span><span class="symbol">&amp;lt;</span>blockquote<span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">code</span>&gt;</span> Element<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> (or <span class="tag">&lt;<span class="name">em</span>&gt;</span>HTML Block</span><br><span class="line">  Quotation Element<span class="tag">&lt;/<span class="name">em</span>&gt;</span>) indicates that the enclosed text is an extended quotation.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure><p>表明引用自cite所示网页</p><p>Browser default styling will render this as an indented paragraph, as an indicator that it is a quote;</p></li><li><p>Quatation（inline）</p><p>replace blockquote with q</p><p>Browser default styling will render this as normal text put in quotes to indicate a quotation</p><p>由于cite属性并没有提供什么链接功能，需要我们自己最好提供链接，有效的方法是将cite标签嵌套于a标签内</p></li><li><p><abbr>— this is used to wrap around an abbreviation or acronym, and provide a full expansion of the term (included inside a <a href="https://developer.mozilla.org/zh-TW/docs/Web/HTML/Global_attributes#attr-title"><code>title</code></a> attribute.) </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;Reverend&quot;</span>&gt;</span>Rev.<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>HTML有一个用于标记联系方式的元素<address>。这只是将html文档开发者的联系方式包括在内，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Chris Mills, Manchester, The Grim North, UK<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>上下标<sup><sub></p></li><li><p><code>：用于组成通用的计算机代码。</p></li><li><pre>：用于标记固定宽度的文本块，其中保留空白（通常是代码块）。</li><li><p><var>：用于专门标记变量名。</p></li><li><p><kbd>：用于标记输入到计算机中的键盘（和其他类型的）输入。</p></li><li><p><samp>：用于标记计算机程序的输出。</p></li><li><p><time>：datetime属性标记元素时间</p></li></ul><h2 id="html结构布局"><a href="#html结构布局" class="headerlink" title="html结构布局"></a>html结构布局</h2><p><em><strong>信息架构</strong></em></p><p>应用于网站设计和开发的信息体系结构是一种组织网站的信息/内容/功能的实践，以便它可以提供最佳的用户体验，并且信息和服务易于使用和发现。</p><ul><li><h2 id="HTML5中的Section元素"><a href="#HTML5中的Section元素" class="headerlink" title="HTML5中的Section元素"></a><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_HTML_sections_and_outlines#section_elements_in_html5">HTML5中的Section元素</a></h2><ul><li><strong>HTML导航元素</strong>《nav》定义了一个部分，其中包含经常出现在网站上的导航链接。您可以具有主菜单和辅助菜单，但是不能将一个<code>&lt;nav&gt;</code>元素嵌套在另一个 <code>&lt;nav&gt;</code>元素中。</li><li><strong>HTML文章元素</strong>《article》定义了一条独立的内容。它不单指主要内容，而是可以用于注释和小部件。</li><li><strong>HTML Section Element</strong>《section》定义了文档的一部分，以指示语义含义的相关分组。使用section元素为父元素提供额外的上下文是有意义的。</li><li><strong>HTML Aside Element</strong>《aside》定义了一个部分，尽管该部分与main元素相关，但不属于主流，例如说明框或广告。aside元素具有自己的轮廓，但不属于主要元素。</li></ul><h3 id="分区中使用的其他语义HTML元素"><a href="#分区中使用的其他语义HTML元素" class="headerlink" title="分区中使用的其他语义HTML元素"></a><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_HTML_sections_and_outlines#other_semantic_html_elements_used_in_sectioning">分区中使用的其他语义HTML元素</a></h3><ul><li><strong>HTML正文元素</strong>《body》定义了文档的所有内容。它包含所有内容和HTML标记。</li><li><strong>HTML标头元素</strong>《header》定义了一个页面区域，通常包含徽标，标题和导航。标头也可以在其他语义元素（例如<code>&lt;article&gt;</code>，<code>&lt;section&gt;</code>，《aside》，《nav》都行）可以放一些作者信息啊什么的东西，</li><li><strong>HTML页脚元素</strong>《footer》定义了页脚，通常包含版权或法律声明，有时还包含一些链接。在节的上下文中，页脚可能包含节内容的发布日期，许可证信息等，同样，上述标间也均可以自己的页脚，尽管有页脚的名称，页脚也不一定位于页面或节的末尾。</li></ul></li><li><p>无语义元素：块级div  内敛span</p></li></ul><p><strong>警告：</strong><code>&lt;div&gt;</code> 非常便利但容易被滥用。由于它们没有语义值，会使 HTML 代码变得混乱。要小心使用，只有在没有更好的语义方案时才选择它，而且要尽可能少用， 否则文档的升级和维护工作会非常困难。</p><p><strong>重要提示</strong>：Web浏览器中没有拟议大纲算法的实现，也没有辅助技术。它从来都不是最终的W3C规范的一部分。因此，<a href="https://www.w3.org/TR/html5/sections.html#outline">大纲</a>算法<em>不应用于</em>将文档结构传达给用户。建议作者使用标题<a href="https://www.w3.org/TR/html5/sections.html#rank">等级</a>（<code>h1</code>- <code>h6</code>）传达文档结构。</p><p>大纲算法是神马？？？</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_HTML_sections_and_outlines">用法指导</a>规定了各个部分的建议使用方法</p><p><em><strong>兼容古老浏览器</strong></em>：</p><p>HTML5语义元素不需要特殊的DOM接口，但是在较旧的浏览器中，它们将需要特定的CSS样式，这些样式不明确支持它们。<code>display: inline</code>默认情况下，未知元素的样式设置为默认样式，因此您需要将其设置为<code>display: block</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">nav</span>, <span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  当你的受众可能用那些鬼浏览器时</p><p>The <strong>HTML <code>&lt;noscript&gt;</code> element</strong> defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">  &lt;script&gt;</span></span><br><span class="line"><span class="comment">    document.createElement(&quot;article&quot;);</span></span><br><span class="line"><span class="comment">    document.createElement(&quot;aside&quot;);</span></span><br><span class="line"><span class="comment">    document.createElement(&quot;footer&quot;);</span></span><br><span class="line"><span class="comment">    document.createElement(&quot;header&quot;);</span></span><br><span class="line"><span class="comment">    document.createElement(&quot;nav&quot;);</span></span><br><span class="line"><span class="comment">    document.createElement(&quot;section&quot;);</span></span><br><span class="line"><span class="comment">    document.createElement(&quot;time&quot;);</span></span><br><span class="line"><span class="comment">  &lt;/script&gt;</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>This web page requires JavaScript to be enabled.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>JavaScript is an object-oriented computer programming language</span><br><span class="line">    commonly used to create interactive effects within web browsers.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://goo.gl/koeeaJ&quot;</span>&gt;</span>How to enable JavaScript?<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="HTML多媒体"><a href="#HTML多媒体" class="headerlink" title="HTML多媒体"></a>HTML多媒体</h1><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>你不应该使用HTML属性来改变图片的大小。如果你把尺寸设定的太大，最终图片看起来会模糊；如果太小，会在下载远远大于你需要的图片时浪费带宽。如果你没有保持正确的<a href="https://zh.wikipedia.org/wiki/%E9%95%B7%E5%AF%AC%E6%AF%94_(%E5%BD%B1%E5%83%8F)">宽高比</a>，图片可能看起来会扭曲。在把图片放到你的网站页面之前，你应该使用图形编辑器使图片的尺寸正确。</p><p>善用alt属性</p><p>使用 HTML5 的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/figure">``</a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/figcaption">``</a> 元素，它正是为此而被创造出来的：为图片提供一个语义容器，在标题和图片之间建立清晰的关联。我们之前的例子可以重写为:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://raw.githubusercontent.com/mdn/learning-area/master/html/multimedia-and-embedding/images-in-html/dinosaur_small.jpg&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">alt</span>=<span class="string">&quot;一只恐龙头部和躯干的骨架，它有一个巨大的头，长着锋利的牙齿。&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">width</span>=<span class="string">&quot;400&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">height</span>=<span class="string">&quot;341&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>曼彻斯特大学博物馆展出的一只霸王龙的化石<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>从无障碍的角度来说，说明文字和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img#attr-alt"><code>alt</code></a> 文本扮演着不同的角色。看得见图片的人们同样可以受益于说明文字，而 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img#attr-alt"><code>alt</code></a> 文字只有在图片无法显示时才这样。 所以，说明文字和 <code>alt</code> 的内容不应该一样，因为当图片无法显示时，它们会同时出现。尝试让你的图片不显示，看看效果如何。</p><p><strong>如果图像对您的内容里有意义，则应使用HTML图像。 如果图像纯粹是装饰，则应使用CSS背景图片</strong></p><p>ps: 谷歌搜索引擎把连字符当作单词的分隔符， 但不会识别下划线。基于此，最好在一开始就养成习惯，文件夹和文件名使用小写，用短横线而不是空格来分隔。可以避免许多问题。</p><h2 id="Video-amp-Audio"><a href="#Video-amp-Audio" class="headerlink" title="Video&amp;Audio"></a>Video&amp;Audio</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;rabbit320.webm&quot;</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>你的浏览器不支持 HTML5 视频。可点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;rabbit320.mp4&quot;</span>&gt;</span>此链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span>观看<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当中的一些属性如下:<br>src同 <img> 标签使用方式相同，src 属性指向你想要嵌入网页当中的视频资源，他们的使用方式完全相同。controls用户必须能够控制视频和音频的回放功能。你可以使用 controls 来包含浏览器提供的控件界面，同时你也可以使用合适的 JavaScript API 创建自己的界面。界面中至少要包含开始、停止以及调整音量的功能。</p><p>video 标签内的内容这个叫做后备内容 — 当浏览器不支持 video标签的时候，就会显示这段内容，这使得我们能够对旧的浏览器提供回退内容。你可以添加任何后备内容，在这个例子中我们提供了一个指向这个视频文件的链接，从而使用户至少可以访问到这个文件，而不会局限于浏览器的支持。</p><p>像 MP3、MP4、WebM这些术语叫做<a href="https://wiki.developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers">容器格式</a>。他们定义了构成媒体文件的音频轨道和视频轨道的储存结构，其中还包含描述这个媒体文件的元数据，以及用于编码的编码译码器等等。</p><p>刚刚所说的格式主要用于将音频和视频压缩成可管理的文件（原始的音频和视频文件非常大）。浏览器包含了不同的 <strong><a href="https://developer.mozilla.org/en-US/docs/Glossary/Codec">Codecs</a></strong>,，如 Vorbis 和 H.264，它们用来将已压缩的音频和视频转化成二进制数字。不同的编码器和不同的容器都有各自的优缺点，在你更了解它们后，你可以自己选择使用哪个编码器和容器。</p><!-- 注：这并没有那么简单，你可以从这里看到 [音视频编码兼容表](https://developer.mozilla.org/zh-CN/docs/conflicting/Web/Media/Formats#浏览器兼容情况)。此外，许多移动平台的浏览器能够播放一些不支持的格式，但是它们用的却是底层系统的媒体播放器。但这也仅是现在支持。--><p>我们该怎么做呢？请看如下例子（你可以点击这里<a href="https://mdn.github.io/learning-area/html/multimedia-and-embedding/video-and-audio-content/multiple-video-formats.html">查看</a>网页，或者点击这里<a href="https://github.com/mdn/learning-area/blob/gh-pages/html/multimedia-and-embedding/video-and-audio-content/multiple-video-formats.html">查看</a>源代码）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;rabbit320.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;rabbit320.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>你的浏览器不支持 HTML5 视频。可点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;rabbit320.mp4&quot;</span>&gt;</span>此链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span>观看<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在我们将 <code>src</code> 属性从 <code>&lt;video&gt;</code> 标签中移除，转而将它放在几个单独的标签 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/source">``</a> 当中。在这个例子当中，浏览器将会检查 <code>&lt;source&gt;</code> 标签，并且播放第一个与其自身 codec 相匹配的媒体。你的视频应当包括 WebM 和 MP4 两种格式，这两种在目前已经足够支持大多数平台和浏览器。</p><p>每个 <code>&lt;source&gt;</code> 标签页含有一个 <code>type</code> 属性，这个属性是可选的</p><p>新的特性：</p><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video#attr-width"><code>width</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video#attr-height"><code>height</code></a></p><p>你可以用属性控制视频的尺寸，也可以用 <a href="https://developer.mozilla.org/en-US/docs/Glossary/CSS">CSS</a> 来控制视频尺寸。 无论使用哪种方式，视频都会保持它原始的长宽比 — 也叫做<strong>纵横比</strong>。如果你设置的尺寸没有保持视频原始长宽比，那么视频边框将会拉伸，而未被视频内容填充的部分，将会显示默认的背景颜色。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video#attr-autoplay"><code>autoplay</code></a></p><p>这个属性会使音频和视频内容立即播放，即使页面的其他部分还没有加载完全。建议不要应用这个属性在你的网站上，因为用户们会比较反感自动播放的媒体文件。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video#attr-loop"><code>loop</code></a></p><p>这个属性可以让音频或者视频文件循环播放。同样不建议使用，除非有必要。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video#attr-muted"><code>muted</code></a></p><p>这个属性会导致媒体播放时，默认关闭声音。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video#attr-poster"><code>poster</code></a></p><p>这个属性指向了一个图像的URL，这个图像会在视频播放前显示。通常用于粗略的预览或者广告。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video#attr-preload"><code>preload</code></a></p><p>这个属性被用来缓冲较大的文件，有3个值可选：<code>&quot;none&quot;</code> ：不缓冲<code>&quot;auto&quot;</code> ：页面加载后缓存媒体文件<code>&quot;metadata&quot;</code> ：仅缓冲文件的元数据</p></li></ul><p>你可以点击<a href="https://mdn.github.io/learning-area/html/multimedia-and-embedding/video-and-audio-content/extra-video-features.html">这里</a>查看以上的例子，也可以点击<a href="https://github.com/mdn/learning-area/blob/gh-pages/html/multimedia-and-embedding/video-and-audio-content/extra-video-features.html">这里</a>查看源代码。注意我们并没有使用 autoplay 属性在这个版本的例子中 — 如果当页面一加载就开始播放视频的话，就不会看到 poster 属性的效果了。</p><p>audio和video几乎完全一样，但不支持width/height和poster</p><h2 id="嵌入iframe"><a href="#嵌入iframe" class="headerlink" title="嵌入iframe"></a>嵌入iframe</h2><p>以前，插件在网络上是不可或缺的。还记得你必须安装Adobe Flash Player才能在线观看电影的日子吗？并且你还会不断地收到关于更新Flash Player和Java运行环境的烦人警报。Web技术已经变得更加强大，那些日子已经结束了。对于大多数应用程序，现在是停止依赖插件传播内容，开始利用Web技术的时候了</p><p>iframe元素出现了（连同其他嵌入内容的方式，如canvas&gt;，video&gt;等），它提供了一种将整个web页嵌入到另一个网页的方法，看起来就像那个web页是另一个网页的一个<img>或其他元素一样。iframe&gt;现在经常被使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allowfullscreen</span><br></pre></td></tr></table></figure><p>如果设置，<code>&lt;iframe&gt;</code>则可以通过<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Fullscreen_API">全屏API</a>设置为全屏模式（稍微超出本文的范围）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frameborder</span><br></pre></td></tr></table></figure><p>如果设置为1，则会告诉浏览器在此框架和其他框架之间绘制边框，这是默认行为。0删除边框。不推荐这样设置，因为在<a href="https://developer.mozilla.org/en-US/docs/Glossary/CSS">CSS中</a>可以更好地实现相同的效果。<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/border"><code>border</code></a><code>: none;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src</span><br></pre></td></tr></table></figure><p>该属性与<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">``</a>/<code>&lt;img&gt;</code>一样包含指向要嵌入文档的URL路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">width&#96; 和 &#96;height</span><br></pre></td></tr></table></figure><p>这些属性指定您想要的iframe的宽度和高度。</p><p>备选内容</p><p>与video &amp; audio等其他类似元素相同，您可以在<code>&lt;iframe&gt;&lt;/iframe&gt;</code>标签之间包含备选内容，如果浏览器不支持<code>&lt;iframe&gt;</code>，将会显示备选内容，这种情况下，我们已经添加了一个到该页面的链接。现在您几乎不可能遇到任何不支持<code>&lt;iframe&gt;</code>的浏览器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sandbox</span><br></pre></td></tr></table></figure><p>该属性需要在已经支持其他<code>&lt;iframe&gt;</code>功能（例如IE 10及更高版本）但稍微更现代的浏览器上才能工作，该属性可以提高安全性设置; 我们将在下一节中更加详细地谈到。</p><p><strong>注意</strong>：为了提高速度，在主内容完成加载后，使用JavaScript设置iframe的<code>src</code>属性是个好主意。这使您的页面可以更快地被使用，并减少您的官方页面加载时间（重要的<a href="https://developer.mozilla.org/en-US/docs/Glossary/SEO">SEO</a>指标）。</p><p>未沙盒化(Unsandboxed)内容可以做得太多（执行JavaScript，提交表单，弹出窗口等）默认情况下，您应该使用没有参数的<code>sandbox</code>属性来强制执行所有可用的限制，如我们前面的示例所示。</p><p>如果绝对需要，您可以逐个添加权限（<code>sandbox=&quot;&quot;</code>属性值内） - 请参阅<code>sandbox</code>所有可用选项的参考条目。其中重要的一点是，你<em>永远不</em>应该同时添加<code>allow-scripts</code>和<code>allow-same-origin</code>到你的<code>sandbox</code>属性中-在这种情况下，嵌入式内容可以绕过阻止站点执行脚本的同源安全策略，并使用JavaScript完全关闭沙盒。</p><p>但还有其它的有待关注，如 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas">``</a>用于JavaScript生成的2D和3D图形，<code>&lt;svg&gt;</code>用于嵌入矢量图形</p><h2 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h2><ul><li>位图使用像素网格来定义 — 一个位图文件精确得包含了每个像素的位置和它的色彩信息。流行的位图格式包括 Bitmap (<code>.bmp</code>), PNG (<code>.png</code>), JPEG (<code>.jpg</code>), and GIF (<code>.gif</code>.)</li><li>矢量图使用算法来定义 — 一个矢量图文件包含了图形和路径的定义，电脑可以根据这些定义计算出当它们在屏幕上渲染时应该呈现的样子。 <a href="https://developer.mozilla.org/en-US/docs/Glossary/SVG">SVG</a> 格式可以让我们创造用于 Web 的精彩的矢量图形。</li></ul><p>此外，矢量图形相较于同样的位图，通常拥有更小的体积，因为它们仅需储存少量的算法，而不是逐个储存每个像素的信息。</p><p>SVG很容易手工编码。 是的，您可以在文本编辑器中手动编写简单的SVG，但是对于复杂的图像，这很快就开始变得非常困难。 为了创建SVG图像，大多数人使用矢量图形编辑器，如 <a href="https://inkscape.org/en/">Inkscape</a> 或 <a href="https://en.wikipedia.org/wiki/Adobe_Illustrator">Illustrator</a>。 这些软件包允许您使用各种图形工具创建各种插图，并创建照片的近似值（例如Inkscape的跟踪位图功能）。</p><p>SVG除了迄今为止所描述的以外还有其他优点：</p><ul><li>矢量图像中的文本仍然可访问（这也有利于 <a href="https://developer.mozilla.org/en-US/docs/Glossary/SEO">SEO</a>)）。</li><li>SVG 可以很好地适应样式/脚本，因为图像的每个组件都是可以通过CSS或通过JavaScript编写的样式的元素。</li></ul><p>那么为什么会有人想使用光栅图形而不是SVG？ 其实 SVG 确实有一些缺点：</p><ul><li>SVG非常容易变得复杂，这意味着文件大小会增加; 复杂的SVG也会在浏览器中占用很长的处理时间。</li><li>SVG可能比栅格图像更难创建，具体取决于您尝试创建哪种图像。</li><li>旧版浏览器不支持SVG，因此如果您需要在网站上支持旧版本的 IE，则可能不适合（SVG从IE9开始得到支持）。</li></ul><p>由于上述原因，光栅图形更适合照片那样复杂精密的图像</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;img</span><br><span class="line">    src=&quot;equilateral.svg&quot;</span><br><span class="line">    alt=&quot;triangle with all three sides equal&quot;</span><br><span class="line">    height=&quot;87px&quot;</span><br><span class="line">    width=&quot;100px&quot; /&gt;</span><br></pre></td></tr></table></figure><p>优点</p><ul><li>快速，熟悉的图像语法与<code>alt</code>属性中提供的内置文本等效。</li><li>可以通过在<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a">``</a>元素嵌套<code>&lt;img&gt;</code>，使图像轻松地成为超链接。</li></ul><p>缺点</p><ul><li>无法使用JavaScript操作图像。</li><li>如果要使用CSS控制SVG内容，则必须在SVG代码中包含内联CSS样式。 （从SVG文件调用的外部样式表不起作用）</li><li>不能用CSS伪类来重设图像样式（如<code>:focus</code>）。</li></ul><p>！！你还可以在文本编辑器中打开SVG文件，复制SVG代码，并将其粘贴到HTML文档中 - 这有时称为将<strong>SVG内联</strong>或<strong>内联SVG</strong>。确保您的SVG代码在<code>&lt;svg&gt;&lt;/svg&gt;</code>标签中（不要在外面添加任何内容）。这是一个非常简单的示例，您可以粘贴到文档中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width&#x3D;&quot;300&quot; height&#x3D;&quot;200&quot;&gt;</span><br><span class="line">    &lt;rect width&#x3D;&quot;100%&quot; height&#x3D;&quot;100%&quot; fill&#x3D;&quot;green&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;svg&gt;</span><br></pre></td></tr></table></figure><p>优点</p><ul><li>将 SVG 内联减少 HTTP 请求，可以减少加载时间。</li><li>您可以为 SVG 元素分配<code>class</code>和<code>id</code>，并使用 CSS 修改样式，无论是在SVG中，还是 HTML 文档中的 CSS 样式规则。 实际上，您可以使用任何 <a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute#presentation_attributes">SVG外观属性</a> 作为CSS属性。</li><li>内联SVG是唯一可以让您在SVG图像上使用CSS交互（如<code>:focus</code>）和CSS动画的方法（即使在常规样式表中）。</li><li>您可以通过将 SVG 标记包在<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a">``</a>元素中，使其成为超链接。</li></ul><h2 id="响应式"><a href="#响应式" class="headerlink" title="响应式"></a>响应式</h2><p>一个改进的方法是，当网站在狭窄的屏幕上观看时，显示一幅图片的包含了重要细节的裁剪版本，第二个被裁剪的图片会在像平板电脑这样的中等宽度的屏幕设备上显示，这就是众所周知的<strong>美术设计问题（art direction problem）</strong>。</p><p>另外，如果是在小屏手机屏幕上显示网页，那么没有必要在网页上嵌入这样大的图片。这被称之为<strong>分辨率切换问题（resolution switching problem）</strong>。位图有固定数量的像素宽，固定数量的像素高，与 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web">矢量图</a> 外观相同，但本质不同。如果显示尺寸大于原始尺寸，一张自身较小的位图看起来会有颗粒感（矢量图则不会）。</p><p>相反，没有必要在比图片实际尺寸小的屏幕上显示一张大图，这样做会浪费带宽——当可以在设备上使用小图像时，手机用户尤其不愿意因为下载用于桌面的大图像而浪费带宽。理想的情况是当访问网站时依靠不同的设备来提供不同的分辨率图片和不同尺寸的图片。</p><p>让事情变得复杂的是，有些设备有很高的分辨率，为了显示的更出色，可能需要超出你预料的更大的图像。这从本质上是一样的问题，但在环境上有一些不同。</p><p>你可能会认为矢量图形能解决这些问题，在某种程度上是这样的——它们无论是文件大小还是比例都合适，无论在哪里你都应该尽可能的使用它们。然而，它们并不适合所有的图片类型，虽然在简单图形、图案、界面元素等方面较好，但如果是有大量的细节的照片，创建矢量图像会变得非常复杂。像JPEG格式这样的位图会更适合上面例子中的图像。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">&quot;elva-fairy-320w.jpg 320w,</span></span></span><br><span class="line"><span class="tag"><span class="string">             elva-fairy-480w.jpg 480w,</span></span></span><br><span class="line"><span class="tag"><span class="string">             elva-fairy-800w.jpg 800w&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">sizes</span>=<span class="string">&quot;(max-width: 320px) 280px,</span></span></span><br><span class="line"><span class="tag"><span class="string">            (max-width: 480px) 440px,</span></span></span><br><span class="line"><span class="tag"><span class="string">            800px&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">src</span>=<span class="string">&quot;elva-fairy-800w.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Elva dressed as a fairy&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>srcset</code>和<code>sizes</code>属性看起来很复杂，但是如果你按照上图所示进行格式化，那么他们并不是很难理解，每一行有不同的属性值。每个值都包含逗号分隔的列表。列表的每一部分由三个子部分组成。让我们来看看现在的每一个内容：</p><p><strong>srcset</strong>定义了我们允许浏览器选择的图像集，以及每个图像的大小。在每个逗号之前，我们写：</p><ol><li>一个<strong>文件名</strong> (<code>elva-fairy-480w.jpg</code>.)</li><li>一个空格</li><li><strong>图像的固有宽度</strong>（以像素为单位）（480w）——注意到这里使用<code>w</code>单位，而不是你预计的<code>px</code>。这是图像的真实大小，可以通过检查你电脑上的图片文件找到（例如，在Mac上，你可以在Finder上选择这个图像，然后按 Cmd + I 来显示信息）。</li></ol><p><code>**sizes**</code>定义了一组媒体条件（例如屏幕宽度）并且指明当某些媒体条件为真时，什么样的图片尺寸是最佳选择—我们在之前已经讨论了一些提示。在这种情况下，在每个逗号之前，我们写：</p><ol><li>一个<strong>媒体条件</strong>（<code>(max-width:480px)</code>）——你会在 <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS">CSS topic</a>中学到更多的。但是现在我们仅仅讨论的是媒体条件描述了屏幕可能处于的状态。在这里，我们说“当可视窗口的宽度是480像素或更少”。</li><li>一个空格</li><li>当媒体条件为真时，图像将填充的<strong>槽的宽度</strong>（<code>440px</code>）</li></ol><p><strong>注意</strong>: 对于槽的宽度，你也许会提供一个固定值 (<code>px</code>, <code>em</code>) 或者是一个相对于视口的长度(<code>vw</code>)，但不是百分比。你也许已经注意到最后一个槽的宽度是没有媒体条件的，它是默认的，当没有任何一个媒体条件为真时，它就会生效。 当浏览器成功匹配第一个媒体条件的时候，剩下所有的东西都会被忽略，所以要注意媒体条件的顺序。</p><p>所以，有了这些属性，浏览器会：</p><ol><li>查看设备宽度</li><li>检查<code>sizes</code>列表中哪个媒体条件是第一个为真</li><li>查看给予该媒体查询的槽大小</li><li>加载<code>srcset</code>列表中引用的最接近所选的槽大小的图像</li></ol><p>如果你支持多种分辨率显示，但希望每个人在屏幕上看到的图片的实际尺寸是相同的，你可以让浏览器通过<code>srcset</code>和x语法结合——一种更简单的语法——而不用<code>sizes</code>，来选择适当分辨率的图片。你可以看一个例子 <a href="https://mdn.github.io/learning-area/html/multimedia-and-embedding/responsive-images/srcset-resolutions.html">srcset-resolutions.html</a>（或 <a href="https://github.com/mdn/learning-area/blob/master/html/multimedia-and-embedding/responsive-images/srcset-resolutions.html">the source code</a>）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">&quot;elva-fairy-320w.jpg,</span></span></span><br><span class="line"><span class="tag"><span class="string">             elva-fairy-480w.jpg 1.5x,</span></span></span><br><span class="line"><span class="tag"><span class="string">             elva-fairy-640w.jpg 2x&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">src</span>=<span class="string">&quot;elva-fairy-640w.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Elva dressed as a fairy&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这种情况下，<code>sizes</code>并不需要——浏览器只是计算出正在显示的显示器的分辨率，然后提供<code>srcset</code>引用的最适合的图像。因此，如果访问页面的设备具有标准/低分辨率显示，一个设备像素表示一个CSS像素，<code>elva-fairy-320w.jpg</code>会被加载（1x 是默认值，所以你不需要写出来）。如果设备有高分辨率，两个或更多的设备像素表示一个CSS像素，<code>elva-fairy-640w.jpg</code> 会被加载。640px的图像大小为93KB，320px的图像的大小仅仅有39KB。</p><p><em><strong>美术设计问题</strong></em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">media</span>=<span class="string">&quot;(max-width: 799px)&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;elva-480w-close-portrait.jpg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">media</span>=<span class="string">&quot;(min-width: 800px)&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;elva-800w.jpg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;elva-800w.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Chris standing up holding his daughter Elva&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> <code>&lt;source&gt;</code>元素包含一个<code>media</code>属性，这一属性包含一个媒体条件——就像第一个<code>srcset</code>例子，这些条件来决定哪张图片会显示——第一个条件返回真，那么就会显示这张图片。在这种情况下，如果视窗的宽度为799px或更少，第一个<code>&lt;source&gt;</code>元素的图片就会显示。如果视窗的宽度是800px或更大，就显示第二张图片。</li><li> <code>srcset</code>属性包含要显示图片的路径。请注意，正如我们在<code>&lt;img&gt;</code>上面看到的那样，<code>&lt;source&gt;</code>可以使用引用多个图像的<code>srcset</code>属性，还有<code>sizes</code>属性。所以你可以通过一个 <code>&lt;picture&gt;</code>元素提供多个图片，不过也可以给每个图片提供多分辨率的图片。实际上，你可能不想经常做这样的事情。</li><li> 在任何情况下，你都必须在 <code>&lt;/picture&gt;</code>之前正确提供一个<code>&lt;img&gt;</code>元素以及它的<code>src</code>和<code>alt</code>属性，否则不会有图片显示。当媒体条件都不返回真的时候（你可以在这个例子中删除第二个<code>&lt;source&gt;</code> 元素），它会提供图片；如果浏览器不支持 <code>&lt;picture&gt;</code>元素时，它可以作为后备方案。</li></ul><p>为了保证效率，响应式设计最好不用JavaScript</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images#%E5%A4%A7%E8%83%86%E7%9A%84%E4%BD%BF%E7%94%A8%E7%8E%B0%E4%BB%A3%E5%9B%BE%E5%83%8F%E6%A0%BC%E5%BC%8F">大胆的使用现代图像格式</a></p><p>有很多令人激动的新图像格式（例如WebP和JPEG-2000）可以在有高质量的同时有较低的文件大小。然而，浏览器对其的支持参差不齐。</p><p><code>&lt;picture&gt;</code>让我们能继续满足老式浏览器的需要。你可以在<code>type</code>属性中提供MIME类型，这样浏览器就能立即拒绝其不支持的文件类型：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">type</span>=<span class="string">&quot;image/svg+xml&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;pyramid.svg&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">type</span>=<span class="string">&quot;image/webp&quot;</span> <span class="attr">srcset</span>=<span class="string">&quot;pyramid.webp&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;pyramid.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;regular pyramid built from four equilateral triangles&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>不要使用<code>media</code>属性，除非你也需要美术设计。</li><li>在<code>&lt;source&gt;</code> 元素中，你只可以引用在<code>type</code>中声明的文件类型。</li><li>像之前一样，如果必要，你可以在<code>srcset</code>和<code>sizes</code>中使用逗号分割的列表。</li></ul><h1 id="表格设计"><a href="#表格设计" class="headerlink" title="表格设计"></a>表格设计</h1><p>table<br>tr表格行<br>th表格小标题<br>td表格基础单元</p><p>rowspan 调高度</p><p>colspan = “2” 宽度是两个单元格</p><p>为了舍弃这种做法，我们可以只定义一次，在 <code>&lt;col&gt;</code> 元素中。<code>&lt;col&gt;</code> 元素被规定包含在 <code>&lt;colgroup&gt;</code> 容器中，而 <code>&lt;colgroup&gt;</code>就在 <code>&lt;table&gt;</code> 标签的下方。我们可以通过如下的做法来创建与上面相同的效果:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">&quot;background-color: yellow&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Data 1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Data 2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Calcutta<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Orange<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Robots<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jazz<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们使用了两个 <code>&lt;col&gt;</code>来定义“列的样式”，每一个<code>&lt;col&gt;</code>都会制定每列的样式，对于第一列，我们没有采取任何样式，但是我们仍然需要添加一个空的 <code>&lt;col&gt;</code> 元素，如果不这样做，那么我们的样式就会应用到第一列上，这和我们预想的不一样。</p><p>如果你想把这种样式信息应用到每一列，我们可以只使用一个 <code>&lt;col&gt;</code> 元素，不过需要包含 span 属性，像这样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">&quot;background-color: yellow&quot;</span> <span class="attr">span</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br></pre></td></tr></table></figure><p>标题属性caption</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Dinosaurs in the Jurassic period<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li> <code>&lt;thead&gt;</code> 需要嵌套在 table 元素中，放置在头部的位置，因为它通常代表第一行，第一行中往往都是每列的标题，但是不是每种情况都是这样的。如果你使用了 / 元素，那么 <code>&lt;thead&gt;</code>元素就需要放在它们的下面。</li><li> <code>&lt;tfoot&gt;</code> 需要嵌套在 table 元素中，放置在底部 (页脚)的位置，一般是最后一行，往往是对前面所有行的总结，比如，你可以按照预想的方式将<code>&lt;tfoot&gt;</code>放在表格的底部，或者就放在 <code>&lt;thead&gt;</code> 的下面。(浏览器仍将它呈现在表格的底部)</li><li> <code>&lt;tbody&gt;</code> 需要嵌套在 table 元素中，放置在 <code>&lt;thead&gt;</code>的下面或者是 <code>&lt;tfoot&gt;</code> 的下面，这取决于你如何设计你的结构。(<code>&lt;tfoot&gt;</code>放在<code>&lt;thead&gt;</code>下面也可以生效.)</li></ul><p><strong>注意</strong>: <code>&lt;tbody&gt;</code> 总是包含在每个表中，如果你没有在代码中指定它，那就是隐式的。可以来验证一下，打开一个你之前没有包含 <code>&lt;tbody&gt;</code> 的例子，然后在你的 <a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_are_browser_developer_tools">browser developer tools</a> 中观察你的代码，你会看到浏览器为你添加了这个标签。你也许会想问，为什么你应该在所有表中都需要这个元素，因为它可以让你更好地控制表格结构和样式。</p><p><strong>表格可以嵌套，虽然通常不建议</strong></p><p>为了帮助屏幕阅读器，赋予行，列标题scole属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;th scope&#x3D;&quot;col&quot;&gt;Purchase&lt;&#x2F;th&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;th scope&#x3D;&quot;row&quot;&gt;Haircut&lt;&#x2F;th&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;th colspan=&quot;3&quot; scope=&quot;colgroup&quot;&gt;Clothes&lt;/th&gt;</code></p><p>colgroup和rowgroup结合colspan和rowspan使用</p><p>也可以用这个精细但是很麻烦的id+headers</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;purchase&quot;</span>&gt;</span>Purchase<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;location&quot;</span>&gt;</span>Location<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;date&quot;</span>&gt;</span>Date<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;evaluation&quot;</span>&gt;</span>Evaluation<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;cost&quot;</span>&gt;</span>Cost (€)<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">id</span>=<span class="string">&quot;haircut&quot;</span>&gt;</span>Haircut<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;location haircut&quot;</span>&gt;</span>Hairdresser<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;date haircut&quot;</span>&gt;</span>12/09<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;evaluation haircut&quot;</span>&gt;</span>Great idea<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">headers</span>=<span class="string">&quot;cost haircut&quot;</span>&gt;</span>30<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  ...</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="以后再看"><a href="#以后再看" class="headerlink" title="以后再看"></a>以后再看</h1><p>这些内容有一丢丢难</p><h2 id="配置CSP指令"><a href="#配置CSP指令" class="headerlink" title="配置CSP指令"></a>配置CSP指令</h2><p><a href="https://developer.mozilla.org/en-US/docs/Glossary/CSP">CSP</a>代表**<a href="https://developer.mozilla.org/en-US/docs/Web/Security/CSP">内容安全策略</a>*<em>，它提供<a href="https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives">一组HTTP标头</a>（由web服务器发送时与元数据一起发送的元数据），旨在提高HTML文档的安全性。在<code>&lt;iframe&gt;</code>s安全性方面，您可以</em><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">将服务器配置为发送适当的<code>X-Frame-Options</code> 标题。</a>*这样做可以防止其他网站在其网页中嵌入您的内容（这将导致<a href="https://en.wikipedia.org/wiki/clickjacking">点击</a>和一系列其他攻击），正如我们之前看到的那样，MDN开发人员已经做了这些工作。</p><h2 id="添加字幕"><a href="#添加字幕" class="headerlink" title="添加字幕"></a>添加字幕</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content#%E6%98%BE%E7%A4%BA%E9%9F%B3%E8%BD%A8%E6%96%87%E6%9C%AC">添加字幕操作</a></p><h2 id="嵌入"><a href="#嵌入" class="headerlink" title="嵌入"></a>嵌入</h2><p>object&gt;<code>元素的功能不同于</code>iframe&gt;`—— 这些元素是用来嵌入多种类型的外部内容的通用嵌入工具，其中包括像Java小程序和Flash，PDF（可在浏览器中显示为一个PDF插件）这样的插件技术，甚至像视频，SVG和图像的内容！</p><p><strong>注意</strong>：<strong>插件</strong>是一种对浏览器原生无法读取的内容提供访问权限的软件。</p><p>然而，您不太可能使用这些元素 - Applet几年来一直没有被使用；由于许多原因，Flash不再受欢迎（见下面的<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies#The_case_against_plugins">插件案例</a>）；PDF更倾向于被链接而不是被嵌入；其他内容，如图像和视频都有更优秀、更容易元素来处理。插件和这些嵌入方法真的是一种传统技术，我们提及它们主要是为了以防您在某些情况下遇到问题，比如内部网或企业项目等。</p><p>如果您发现自己需要嵌入插件内容，那么您至少需要一些这样的信息：</p><p>|                                                              | <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/embed">``</a> | <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/object">``</a> |<br>| :———————————————————– | :———————————————————– |<br>| 嵌入内容的<a href="https://developer.mozilla.org/en-US/docs/Glossary/URL">网址</a> | <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/embed#attr-src"><code>src</code></a> |<br>| 嵌入内容的<em>准确</em><a href="https://developer.mozilla.org/en-US/docs/Glossary/MIME_type">媒体类型</a> | <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/embed#attr-type"><code>type</code></a> |<br>| 由插件控制的框的高度和宽度（以CSS像素为单位）                | <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/embed#attr-height"><code>height</code></a> <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/embed#attr-width"><code>width</code></a> |<br>| 名称和值，将插件作为参数提供                                 | 具有这些名称和值的ad hoc属性                                 |<br>| 独立的HTML内容作为不可用资源的回退                           | 不支持（<code>&lt;noembed&gt;</code>已过时）                                  |</p><p><strong>注意</strong>：<code>&lt;object&gt;</code>需要<code>data</code>属性，<code>type</code>属性或两者。如果您同时使用这两个，您也可以使用该<code>typemustmatch</code>属性（仅在Firefox中实现，在本文中）。<code>typemustmatch</code>保持嵌入文件不运行，除非<code>type</code>属性提供正确的媒体类型。<code>typemustmatch</code>因此，当您嵌入来自不同<a href="https://developer.mozilla.org/en-US/docs/Glossary/origin">来源的</a>内容（可以防止攻击者通过插件运行任意脚本）时，可以赋予重要的安全优势。</p><h2 id="SVG元素参考"><a href="#SVG元素参考" class="headerlink" title="SVG元素参考"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Element">SVG元素参考</a></h2><h2 id="See-also"><a href="#See-also" class="headerlink" title="See also"></a><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web#see_also">See also</a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Getting_Started">SVG tutorial</a> on MDN</li><li><a href="http://thenewcode.com/744/Making-SVG-Responsive">Quick tips for responsive SVGs</a></li><li><a href="https://tympanus.net/codrops/2014/08/19/making-svgs-responsive-with-css/">Sara Soueidan’s tutorial on responsive SVG images</a></li><li><a href="https://www.w3.org/TR/SVG-access/">Accessibility benefits of SVG</a></li><li><a href="https://css-tricks.com/scale-svg/">How to scale SVGs </a>(it’s not as simple as raster graphics!)</li></ul><h2 id="响应者适应模式"><a href="#响应者适应模式" class="headerlink" title="响应者适应模式"></a><a href="https://developer.mozilla.org/en-US/docs/Tools/Responsive_Design_Mode">响应者适应模式</a></h2>]]></content>
    
    
    <summary type="html">html笔记</summary>
    
    
    
    <category term="前端" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="MDN" scheme="http://example.com/tags/MDN/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/03/09/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/03/09/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-03-09T05:15:59.000Z</published>
    <updated>2021-03-09T05:17:13.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>来自菜鸟教程</p><h2 id="为什么使用正则表达式？"><a href="#为什么使用正则表达式？" class="headerlink" title="为什么使用正则表达式？"></a>为什么使用正则表达式？</h2><p>典型的搜索和替换操作要求您提供与预期的搜索结果匹配的确切文本。虽然这种技术对于对静态文本执行简单搜索和替换任务可能已经足够了，但它缺乏灵活性，若采用这种方法搜索动态文本，即使不是不可能，至少也会变得很困难。</p><p>通过使用正则表达式，可以：</p><ul><li>测试字符串内的模式。<br>例如，可以测试输入字符串，以查看字符串内是否出现电话号码模式或信用卡号码模式。这称为数据验证。</li><li>替换文本。<br>可以使用正则表达式来识别文档中的特定文本，完全删除该文本或者用其他文本替换它。</li><li>基于模式匹配从字符串中提取子字符串。<br>可以查找文档内或输入域内特定的文本。</li></ul><p>例如，您可能需要搜索整个网站，删除过时的材料，以及替换某些 HTML 格式标记。在这种情况下，可以使用正则表达式来确定在每个文件中是否出现该材料或该 HTML 格式标记。此过程将受影响的文件列表缩小到包含需要删除或更改的材料的那些文件。然后可以使用正则表达式来删除过时的材料。最后，可以使用正则表达式来搜索和替换标记。</p><h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><ol><li><p>普通字符包括没有显式指定为元字符的所有可打印和不可打印字符。这包括所有大写和小写字母、所有数字、所有标点符号和一些其他符号。</p></li><li><p>非打印字符</p><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\cx</td><td align="left">匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td align="left">\f</td><td align="left">匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td align="left">\n</td><td align="left">匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td align="left">\r</td><td align="left">匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td align="left">\s</td><td align="left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。注意 Unicode 正则表达式会匹配全角空格符。</td></tr><tr><td align="left">\S</td><td align="left">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td align="left">\t</td><td align="left">匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td align="left">\v</td><td align="left">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr></tbody></table></li><li><p>特别字符许多元字符要求在试图匹配它们时特别对待。若要匹配这些特殊字符，必须首先使字符”转义”，即，将反斜杠字符*<em>*</em> 放在它们前面。比如限定符</p></li><li><p>限定符用来指定正则表达式的一个给定组件必须要出现多少次才能满足匹配。有 ***** 或 <strong>+</strong> 或 <strong>?</strong> 或 <strong>{n}</strong> 或 <strong>{n,}</strong> 或 <strong>{n,m}</strong> 共6种。</p><p>正则表达式的限定符有：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 、 “does” 中的 “does” 、 “doxy” 中的 “do” 。? 等价于 {0,1}。</td></tr><tr><td align="left">{n}</td><td align="left">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">{n,}</td><td align="left">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td align="left">{n,m}</td><td align="left">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr></tbody></table><p>以下正则表达式匹配一个正整数，**[1-9]<strong>设置第一个数字不是 0，</strong>[0-9]*** 表示任意多个数字：</p></li><li><p>定位符使您能够将正则表达式固定到行首或行尾。它们还使您能够创建这样的正则表达式，这些正则表达式出现在一个单词内、在一个单词的开头或者一个单词的结尾。</p><p>正则表达式的定位符有：</p><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">^</td><td align="left">匹配输入字符串开始的位置。如果设置了 RegExp 对象的 Multiline 属性，^ 还会与 \n 或 \r 之后的位置匹配。</td></tr><tr><td align="left">$</td><td align="left">匹配输入字符串结尾的位置。如果设置了 RegExp 对象的 Multiline 属性，$ 还会与 \n 或 \r 之前的位置匹配。</td></tr><tr><td align="left">\b</td><td align="left">匹配一个单词边界，即字与空格间的位置。</td></tr><tr><td align="left">\B</td><td align="left">非单词边界匹配。</td></tr></tbody></table></li><li><p>选择</p><p>用圆括号 <strong>()</strong> 将所有选择项括起来，相邻的选择项之间用 <strong>|</strong> 分隔。</p><p><strong>()</strong> 表示捕获分组，**()** 会把每个分组里的匹配的值保存起来， 多个匹配值可以通过数字 n 来查看(<strong>n</strong> 是一个数字，表示第 n 个捕获组的内容)</p><p>但用圆括号会有一个副作用，使相关的匹配会被缓存，此时可用 <strong>?:</strong> 放在第一个选项前来消除这种副作用</p></li><li><p>先/后行断言</p><p>个人感觉这是一种修饰，不会有括号那种缓冲的副作用</p><p>**exp1(?=exp2)**：查找 exp2 前面的 exp1</p><p><strong>(?&lt;=exp2)exp1</strong>：查找 exp2 后面的 exp1。</p><p>**exp1(?!exp2)**：查找后面不是 exp2 的 exp1。</p><p><strong>(?&lt;!exp2)exp1</strong>：查找前面不是 exp2 的 exp1。</p></li><li><p>修饰符：(置于表达式之后)</p><table><thead><tr><th align="left">修饰符</th><th align="left">含义</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">i</td><td align="left">ignore - 不区分大小写</td><td align="left">将匹配设置为不区分大小写，搜索时不区分大小写: A 和 a 没有区别。</td></tr><tr><td align="left">g</td><td align="left">global - 全局匹配</td><td align="left">查找所有的匹配项。</td></tr><tr><td align="left">m</td><td align="left">multi line - 多行匹配</td><td align="left">使边界字符 <strong>^</strong> 和 <strong>$</strong> 匹配每一行的开头和结尾，记住是多行，而不是整个字符串的开头和结尾。</td></tr><tr><td align="left">s</td><td align="left">特殊字符圆点 <strong>.</strong> 中包含换行符 <strong>\n</strong></td><td align="left">默认情况下的圆点 <strong>.</strong> 是 匹配除换行符 <strong>\n</strong> 之外的任何字符，加上 <strong>s</strong> 修饰符之后, <strong>.</strong> 中包含换行符 \n。</td></tr></tbody></table></li></ol><h3 id="总表"><a href="#总表" class="headerlink" title="总表"></a>总表</h3><table><thead><tr><th align="left">字符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\</td><td align="left">将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，’n’ 匹配字符 “n”。’\n’ 匹配一个换行符。序列 ‘\‘ 匹配 “&quot; 而 “(“ 则匹配 “(“。</td></tr><tr><td align="left">^</td><td align="left">匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\n’ 或 ‘\r’ 之后的位置。</td></tr><tr><td align="left">$</td><td align="left">匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\n’ 或 ‘\r’ 之前的位置。</td></tr><tr><td align="left">*</td><td align="left">匹配前面的子表达式零次或多次。例如，zo* 能匹配 “z” 以及 “zoo”。* 等价于{0,}。</td></tr><tr><td align="left">+</td><td align="left">匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。</td></tr><tr><td align="left">?</td><td align="left">匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 。? 等价于 {0,1}。</td></tr><tr><td align="left">{n}</td><td align="left">n 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。</td></tr><tr><td align="left">{n,}</td><td align="left">n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o*’。</td></tr><tr><td align="left">{n,m}</td><td align="left">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td align="left">?</td><td align="left">当该字符紧跟在任何一个其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。</td></tr><tr><td align="left">.</td><td align="left">匹配除换行符（\n、\r）之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用像”<strong>(.|\n)</strong>“的模式。</td></tr><tr><td align="left">(pattern)</td><td align="left">匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘(‘ 或 ‘)‘。</td></tr><tr><td align="left">(?:pattern)</td><td align="left">匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (|) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y|ies) 就是一个比 ‘industry|industries’ 更简略的表达式。</td></tr><tr><td align="left">(?=pattern)</td><td align="left">正向肯定预查（look ahead positive assert），在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，”Windows(?=95|98|NT|2000)”能匹配”Windows2000”中的”Windows”，但不能匹配”Windows3.1”中的”Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td align="left">(?!pattern)</td><td align="left">正向否定预查(negative assert)，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如”Windows(?!95|98|NT|2000)”能匹配”Windows3.1”中的”Windows”，但不能匹配”Windows2000”中的”Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。</td></tr><tr><td align="left">(?&lt;=pattern)</td><td align="left">反向(look behind)肯定预查，与正向肯定预查类似，只是方向相反。例如，”`(?&lt;=95</td></tr><tr><td align="left">(?&lt;!pattern)</td><td align="left">反向否定预查，与正向否定预查类似，只是方向相反。例如”`(?&lt;!95</td></tr><tr><td align="left">x|y</td><td align="left">匹配 x 或 y。例如，’z|food’ 能匹配 “z” 或 “food”。’(z|f)ood’ 则匹配 “zood” 或 “food”。</td></tr><tr><td align="left">[xyz]</td><td align="left">字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。</td></tr><tr><td align="left">[^xyz]</td><td align="left">负值字符集合。匹配未包含的任意字符。例如， ‘[^abc]’ 可以匹配 “plain” 中的’p’、’l’、’i’、’n’。</td></tr><tr><td align="left">[a-z]</td><td align="left">字符范围。匹配指定范围内的任意字符。例如，’[a-z]’ 可以匹配 ‘a’ 到 ‘z’ 范围内的任意小写字母字符。</td></tr><tr><td align="left">[^a-z]</td><td align="left">负值字符范围。匹配任何不在指定范围内的任意字符。例如，’[^a-z]’ 可以匹配任何不在 ‘a’ 到 ‘z’ 范围内的任意字符。</td></tr><tr><td align="left">\b</td><td align="left">匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。</td></tr><tr><td align="left">\B</td><td align="left">匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。</td></tr><tr><td align="left">\cx</td><td align="left">匹配由 x 指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td></tr><tr><td align="left">\d</td><td align="left">匹配一个数字字符。等价于 [0-9]。</td></tr><tr><td align="left">\D</td><td align="left">匹配一个非数字字符。等价于 [^0-9]。</td></tr><tr><td align="left">\f</td><td align="left">匹配一个换页符。等价于 \x0c 和 \cL。</td></tr><tr><td align="left">\n</td><td align="left">匹配一个换行符。等价于 \x0a 和 \cJ。</td></tr><tr><td align="left">\r</td><td align="left">匹配一个回车符。等价于 \x0d 和 \cM。</td></tr><tr><td align="left">\s</td><td align="left">匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</td></tr><tr><td align="left">\S</td><td align="left">匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td></tr><tr><td align="left">\t</td><td align="left">匹配一个制表符。等价于 \x09 和 \cI。</td></tr><tr><td align="left">\v</td><td align="left">匹配一个垂直制表符。等价于 \x0b 和 \cK。</td></tr><tr><td align="left">\w</td><td align="left">匹配字母、数字、下划线。等价于’[A-Za-z0-9_]’。</td></tr><tr><td align="left">\W</td><td align="left">匹配非字母、数字、下划线。等价于 ‘[^A-Za-z0-9_]’。</td></tr><tr><td align="left">\xn</td><td align="left">匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\x41’ 匹配 “A”。’\x041’ 则等价于 ‘\x04’ &amp; “1”。正则表达式中可以使用 ASCII 编码。</td></tr><tr><td align="left">\num</td><td align="left">匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，’(.)\1’ 匹配两个连续的相同字符。</td></tr><tr><td align="left">\n</td><td align="left">标识一个八进制转义值或一个向后引用。如果 \n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。</td></tr><tr><td align="left">\nm</td><td align="left">标识一个八进制转义值或一个向后引用。如果 \nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \nm 将匹配八进制转义值 nm。</td></tr><tr><td align="left">\nml</td><td align="left">如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。</td></tr><tr><td align="left">\un</td><td align="left">匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \u00A9 匹配版权符号 (?)。</td></tr></tbody></table><h2 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h2><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">\</td><td align="left">转义符</td></tr><tr><td align="left">(), (?:), (?=), []</td><td align="left">圆括号和方括号</td></tr><tr><td align="left">*, +, ?, {n}, {n,}, {n,m}</td><td align="left">限定符</td></tr><tr><td align="left">^, $, \任何元字符、任何字符</td><td align="left">定位点和序列（即：位置和顺序）</td></tr><tr><td align="left">|</td><td align="left">替换，”或”操作 字符具有高于替换运算符的优先级，使得”m|food”匹配”m”或”food”。若要匹配”mood”或”food”，请使用括号创建子表达式，从而产生”(m|f)ood”。</td></tr></tbody></table><h2 id="基本模式匹配"><a href="#基本模式匹配" class="headerlink" title="基本模式匹配"></a>基本模式匹配</h2><p>一切从最基本的开始。模式，是正则表达式最基本的元素，它们是一组描述字符串特征的字符。模式可以很简单，由普通的字符串组成，也可以非常复杂，往往用特殊的字符表示一个范围内的字符、重复出现，或表示上下文。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^once</span><br></pre></td></tr></table></figure><p>这个模式包含一个特殊的字符^，表示该模式只匹配那些以once开头的字符串。例如该模式与字符串”once upon a time”匹配，与”There once was a man from NewYork”不匹配。正如如^符号表示开头一样，$符号用来匹配那些以给定模式结尾的字符串。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bucket$</span><br></pre></td></tr></table></figure><p>这个模式与”Who kept all of this cash in a bucket”匹配，与”buckets”不匹配。字符 <strong>^</strong> 和 <strong>$</strong> 同时使用时，表示精确匹配（字符串与模式一样）。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^bucket$</span><br></pre></td></tr></table></figure><p>只匹配字符串”bucket”。如果一个模式不包括^和$，那么它与任何包含该模式的字符串匹配。例如：模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">once</span><br></pre></td></tr></table></figure><p>与字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">There once was a man from NewYork</span><br><span class="line">Who kept all of his cash in a bucket.</span><br></pre></td></tr></table></figure><p>是匹配的。</p><h2 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h2><p>对一个正则表达式模式或部分模式两边添加圆括号将导致相关匹配存储到一个临时缓冲区中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 <strong>\n</strong> 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</p><p>可以使用非捕获元字符 <strong>?:<strong>、</strong>?=</strong> 或 <strong>?!</strong> 来重写捕获，忽略对相关匹配的保存。</p><p>反向引用的最简单的、最有用的应用之一，是提供查找文本中两个相同的相邻单词的匹配项的能力。以下面的句子为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Is is the cost of of gasoline going up up?</span><br></pre></td></tr></table></figure><p>上面的句子很显然有多个重复的单词。如果能设计一种方法定位该句子，而不必查找每个单词的重复出现，那该有多好。下面的正则表达式使用单个子表达式来实现这一点：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Is is the cost of of gasoline going up up&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> patt1 = <span class="regexp">/\b([a-z]+) \1\b/ig</span>;</span><br><span class="line"><span class="built_in">document</span>.write(str.match(patt1));</span><br></pre></td></tr></table></figure><h2 id="小ps："><a href="#小ps：" class="headerlink" title="小ps："></a>小ps：</h2><ol><li><em>*<em>*</em>** 和 *</em>+** 限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个 ? 就可以实现非贪婪或最小匹配。**</li></ol><h1 id="常用表达式"><a href="#常用表达式" class="headerlink" title="常用表达式"></a>常用表达式</h1><p>转自<a href="https://oddfar.com/archives/35/">https://oddfar.com/archives/35/</a></p><h2 id="校验数字的表达式"><a href="#校验数字的表达式" class="headerlink" title="校验数字的表达式"></a>校验数字的表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1、数字：^[0-9]*$</span><br><span class="line">2、n位的数字：^\d&#123;n&#125;$</span><br><span class="line">3、至少n位的数字：^\d&#123;n,&#125;$</span><br><span class="line">4、m-n位的数字：^\d&#123;m,n&#125;$</span><br><span class="line">5、零和非零开头的数字：^(0|[1-9][0-9]*)$</span><br><span class="line">6、非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]&#123;1,2&#125;)?$</span><br><span class="line">7、带1-2位小数的正数或负数：^(\-)?\d+(\.\d&#123;1,2&#125;)?$</span><br><span class="line">8、正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$</span><br><span class="line">9、有两位小数的正实数：^[0-9]+(.[0-9]&#123;2&#125;)?$</span><br><span class="line">10、有1~3位小数的正实数：^[0-9]+(.[0-9]&#123;1,3&#125;)?$</span><br><span class="line">11、非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*)&#123;1,3&#125;$ 或 ^\+?[1-9][0-9]*$</span><br><span class="line">12、非零的负整数：^\-[1-9][]0-9&quot;*$ 或 ^-[1-9]\d*$</span><br><span class="line">13、非负整数：^\d+$ 或 ^[1-9]\d*|0$</span><br><span class="line">14、非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</span><br><span class="line">15、非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$</span><br><span class="line">16、非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$</span><br><span class="line">17、正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$</span><br><span class="line">18、负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$</span><br><span class="line">19、浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$</span><br></pre></td></tr></table></figure><h2 id="校验字符的表达式"><a href="#校验字符的表达式" class="headerlink" title="校验字符的表达式"></a>校验字符的表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-  1、汉字：^[\u4e00-\u9fa5]&#123;0,&#125;$</span><br><span class="line">-  2、英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]&#123;4,40&#125;$</span><br><span class="line">-  3、长度为3-20的所有字符：^.&#123;3,20&#125;$</span><br><span class="line">-  4、由26个英文字母组成的字符串：^[A-Za-z]+$</span><br><span class="line">-  5、由26个大写英文字母组成的字符串：^[A-Z]+$</span><br><span class="line">-  6、由26个小写英文字母组成的字符串：^[a-z]+$</span><br><span class="line">-  7、由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$</span><br><span class="line">-  8、由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w&#123;3,20&#125;$</span><br><span class="line">-  9、中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$</span><br><span class="line">- 10、中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]&#123;2,20&#125;$</span><br><span class="line">- 11、可以输入含有^%&amp;&#39;,;&#x3D;?$\&quot;等字符：[^%&amp;&#39;,;&#x3D;?$\x22]+</span><br><span class="line">- 12、禁止输入含有~的字符：[^~\x22]+</span><br></pre></td></tr></table></figure><h2 id="特殊需求表达式"><a href="#特殊需求表达式" class="headerlink" title="特殊需求表达式"></a>特殊需求表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-  1、Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</span><br><span class="line">-  2、域名：[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(&#x2F;.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+&#x2F;.?</span><br><span class="line">-  3、InternetURL：[a-zA-z]+:&#x2F;&#x2F;[^\s]* 或 ^http:&#x2F;&#x2F;([\w-]+\.)+[\w-]+(&#x2F;[\w-.&#x2F;?%&amp;&#x3D;]*)?$</span><br><span class="line">-  4、手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$</span><br><span class="line">-  5、电话号码(&quot;XXX-XXXXXXX&quot;、&quot;XXXX-XXXXXXXX&quot;、&quot;XXX-XXXXXXX&quot;、&quot;XXX-XXXXXXXX&quot;、&quot;XXXXXXX&quot;和&quot;XXXXXXXX)：^(\(\d&#123;3,4&#125;-)|\d&#123;3.4&#125;-)?\d&#123;7,8&#125;$ </span><br><span class="line">-  6、国内电话号码(0511-4405222、021-87888822)：\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125;</span><br><span class="line">-  7、身份证号码(数字、字母x结尾)：^(\d&#123;15&#125;$|^\d&#123;18&#125;$|^\d&#123;17&#125;(\d|X|x))$</span><br><span class="line">-  9、帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</span><br><span class="line">- 10、密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w&#123;5,17&#125;$</span><br><span class="line">- 11、强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?&#x3D;.*\d)(?&#x3D;.*[a-z])(?&#x3D;.*[A-Z]).&#123;8,10&#125;$  </span><br><span class="line">- 12、日期格式：^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</span><br></pre></td></tr></table></figure><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- 1、  中文字符的正则表达式：[\u4e00-\u9fa5]</span><br><span class="line">- 2、  双字节字符：  [^\x00-\xff](包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</span><br><span class="line">- 3、 空白行的正则表达式：\n\s*\r    (可以用来删除空白行)</span><br><span class="line">- 4、 HTML标记的正则表达式：&lt;(\S*?)[^&gt;]*&gt;.*?&lt;&#x2F;\1&gt;|&lt;.*? &#x2F;&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</span><br><span class="line">- 5、 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$)  (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</span><br><span class="line">- 6、 腾讯QQ号：[1-9][0-9]&#123;4,&#125;    (腾讯QQ号从10000开始)</span><br><span class="line">- 7、 中国邮政编码：[1-9]\d&#123;5&#125;(?!\d)    (中国邮政编码为6位数字)</span><br><span class="line">- 8、 IP地址：\d+\.\d+\.\d+\.\d+    (提取IP地址时有用)</span><br><span class="line">- 9、 匹配所有字符：(.*?)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">顺路学学传说中的正则表达式</summary>
    
    
    
    <category term="skills" scheme="http://example.com/categories/skills/"/>
    
    
  </entry>
  
  <entry>
    <title>pythoning</title>
    <link href="http://example.com/2021/03/08/pythoning/"/>
    <id>http://example.com/2021/03/08/pythoning/</id>
    <published>2021-03-08T06:28:04.000Z</published>
    <updated>2021-03-08T14:02:25.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python学习中！"><a href="#Python学习中！" class="headerlink" title="Python学习中！"></a>Python学习中！</h1><p>[toc]</p><h2 id="python要学的"><a href="#python要学的" class="headerlink" title="python要学的"></a>python要学的</h2><ol><li>基础语法（Y）</li><li>进阶语法（）</li><li>内置函数（）</li><li>高级：库（），正则表达式（），进程线程（），mySQL（）</li><li>后端三大框架（Django、 Flask以及Tornado）</li></ol><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ol><li><p>在Python中，代码不是越多越好，而是越少越好。代码不是越复杂越好，而是越简单越好。</p></li><li><p>可变对象和不可变对象：可变指存在某项操作可以改变本身如list</p></li><li><p>set里都是key，set可以做&amp;和|操作</p></li><li><p>tuple里的不变指“指向对象不变”，指向的对象自身可以变（如list）</p></li><li><p>函数名其实就是指向一个函数对象的引用，完全可以把函数名赋给一个变量，相当于给这个函数起了一个“别名”</p></li><li><p>占位符pass什么都不做</p></li><li><p>函数可以同时返回多个值，但其实就是一个tuple，多个变量可以同时接收一个tuple，按位置赋给对应的值</p></li><li><p>定义默认参数要牢记一点：默认参数必须指向不变对象！如果指向可变对象如一个list，默认参数则指向这个list，且内容会被记住，每次调用都有继承，通过妙用不变对象来规避</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_end</span>(<span class="params">L=<span class="literal">None</span></span>):</span></span><br><span class="line">    <span class="keyword">if</span> L <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        L = []</span><br><span class="line">    L.append(<span class="string">&#x27;END&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br></pre></td></tr></table></figure><p>​    因为Python函数在定义的时候，默认参数<code>L</code>的值就被计算出来了，即<code>[]</code>，因为默认参数<code>L</code>也是一个变量，它指向对象<code>[]</code>，每次调用该函数，如果改变了<code>L</code>的内容，则下次调用时，默认参数的内容就变了，不再是函数定义时的<code>[]</code>了。</p></li><li><p>参数前加*可以接受list和tuple并组装成tuple，加**则自动组装成dict，不过此时的key不用加引号</p></li><li><p>命名关键字：</p></li><li><p>命名关键字参数需要一个特殊分隔符<code>*</code>，<code>*</code>后面的参数被视为命名关键字参数。</p></li><li><p>如果函数定义中已经有了一个可变参数，后面跟着的命名关键字参数就不再需要一个特殊分隔符<code>*</code>了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">person</span>(<span class="params">name, age, *args, city, job</span>):</span></span><br><span class="line">    print(name, age, args, city, job)</span><br></pre></td></tr></table></figure></li><li><p>函数参数规则：</p><ol><li><em><strong>参数定义的顺序必须是：必选参数、默认参数、可变参数、命名关键字参数和关键字参数。</strong></em></li><li>所以，对于任意函数，都可以通过类似<code>func(*args, **kw)</code>的形式调用它，无论它的参数是如何定义的。</li><li><strong>虽然可以组合多达5种参数，但不要同时使用太多的组合，否则函数接口的可理解性很差。</strong></li></ol></li><li><p>```python<br> a, b = b, a + b #这个挺诡异的，记录了初始值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">15. 切片可用于str，list，tuple</span><br><span class="line"></span><br><span class="line">16. 判断一个对象是可迭代对象：通过collections模块的Iterable类型判断</span><br><span class="line"></span><br><span class="line">    &#96;&#96;&#96;python</span><br><span class="line">    &gt;&gt;&gt; from collections import Iterable</span><br><span class="line">    &gt;&gt;&gt; isinstance(&#39;abc&#39;, Iterable) # str是否可迭代</span><br></pre></td></tr></table></figure></li><li><p>列表解析：</p><ol><li>可以使用两层循环，可以生成全排列：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[m + n <span class="keyword">for</span> m <span class="keyword">in</span> <span class="string">&#x27;ABC&#x27;</span> <span class="keyword">for</span> n <span class="keyword">in</span> <span class="string">&#x27;XYZ&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;AX&#x27;</span>, <span class="string">&#x27;AY&#x27;</span>, <span class="string">&#x27;AZ&#x27;</span>, <span class="string">&#x27;BX&#x27;</span>, <span class="string">&#x27;BY&#x27;</span>, <span class="string">&#x27;BZ&#x27;</span>, <span class="string">&#x27;CX&#x27;</span>, <span class="string">&#x27;CY&#x27;</span>, <span class="string">&#x27;CZ&#x27;</span>]</span><br></pre></td></tr></table></figure><ol start="2"><li><p>for后面的<code>if</code>是一个筛选条件，不能带<code>else</code></p></li><li><p>for前面的部分是一个表达式，它必须根据<code>x</code>计算出一个结果，必须加上else，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[x <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">else</span> -x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>)]</span><br></pre></td></tr></table></figure></li></ol></li><li><p>生成器generator：</p><ol><li><p>第一种方法很简单，只要把一个列表生成式的<code>[]</code>改成<code>()</code></p></li><li><p>二：如果一个函数定义中包含<code>yield</code>关键字，那么这个函数就不再是一个普通函数，而是一个generator</p><p>​    变成generator的函数，在每次调用<code>next()</code>的时候执行，遇到<code>yield</code>语句返回，再次执行时从上次返回的<code>yield</code>语句处继续执行。</p></li><li><p>generator函数的“调用”实际返回一个generator对象：</p></li><li><p>但是用<code>for</code>循环调用generator时，发现拿不到generator的<code>return</code>语句的返回值。如果想要拿到返回值，必须捕获<code>StopIteration</code>错误，返回值包含在<code>StopIteration</code>的<code>value</code>中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>g = fib(<span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        x = <span class="built_in">next</span>(g)</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">&#x27;g:&#x27;</span>, x)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span> StopIteration <span class="keyword">as</span> e:</span><br><span class="line"><span class="meta">... </span>        print(<span class="string">&#x27;Generator return value:&#x27;</span>, e.value)</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>凡是可作用于<code>for</code>循环的对象都是<code>Iterable</code>类型；</p><p>凡是可作用于<code>next()</code>函数的对象都是<code>Iterator</code>类型，它们表示一个惰性计算的序列；</p><p>集合数据类型如<code>list</code>、<code>dict</code>、<code>str</code>等是<code>Iterable</code>但不是<code>Iterator</code>，不过可以通过<code>iter()</code>函数获得一个<code>Iterator</code>对象。</p></li><li><p>返回闭包时牢记一点：返回函数不要引用任何循环变量，或者后续会发生变化的变量。因为不同地方都指向同一个对象，多处修改</p></li><li><p><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017451662295584" title="来自廖雪峰的装饰器详解">装饰器详解</a>functools.wraps(func)</p></li><li><p>偏函数：</p><p><code>functools.partial</code>的作用就是，把一个函数的某些参数给固定住（也就是设置默认值），返回一个新的函数，调用这个新函数会更简单。其实也可以传入其他值，会自动加到左侧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max2 &#x3D; functools.partial(max, 10)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max2(<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>) = <span class="built_in">max</span>(<span class="number">10</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><ol><li><p>在Python中，实例的变量名如果以<code>__</code>开头，就变成了一个私有变量（private），只有内部可以访问，外部不能访问，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.__name</span><br></pre></td></tr></table></figure><p>有些时候，你会看到以一个下划线开头的实例变量名，比如<code>_name</code>，这样的实例变量外部是可以访问的，但是，按照约定俗成的规定，当你看到这样的变量时，意思就是，“虽然我可以被访问，但是，请把我视为私有变量，不要随意访问”。</p><p>双下划线开头的实例变量是不是一定不能从外部访问呢？其实也不是。不能直接访问<code>__name</code>是因为Python解释器对外把<code>__name</code>变量改成了<code>_Student__name</code>，所以，仍然可以通过<code>_Student__name</code>来访问<code>__name</code>变量：</p></li><li><p>在继承关系中，如果一个实例的数据类型是某个子类，那它的数据类型也可以被看做是父类。但是，反过来就不行</p></li><li><p>对于一个变量，我们只需要知道它是<code>Animal</code>类型，无需确切地知道它的子类型，就可以放心地调用<code>run()</code>方法，而具体调用的<code>run()</code>方法是作用在<code>Animal</code>、<code>Dog</code>、<code>Cat</code>还是<code>Tortoise</code>对象上，由运行时该对象的确切类型决定，这就是 <em><strong>多态真正的威力</strong></em>：调用方只管调用，不管细节，而当我们新增一种<code>Animal</code>的子类时，只要确保<code>run()</code>方法编写正确，不用管原来的代码是如何调用的。这就是著名的“开闭”原则：</p><p>对扩展开放：允许新增<code>Animal</code>子类；</p><p>对修改封闭：不需要修改依赖<code>Animal</code>类型的<code>run_twice()</code>等函数。</p></li><li><p>动态语言的“鸭子类型”，它并不要求严格的继承体系,只要同样能进行操作，并不会检查它的类型，即使你要求的参数是animal类</p></li><li><p>千万不要对实例属性和类属性使用相同的名字，因为相同名称的实例属性将屏蔽掉类属性，但是当你删除实例属性后，再使用相同的名称，访问到的将是类属性。</p></li><li><p>可以给实例动态绑定属性（直接）</p><p>A是类，a=A()  </p><p> a.name=’darren’  del(a.name)可以直接操作</p><p>print(a.attribute)要是没有特殊的，就打印A的</p><p>还可以动态绑定方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">set_age</span>(<span class="params">self, age</span>):</span> <span class="comment">#定义一个函数作为实例方法</span></span><br><span class="line"><span class="meta">... </span>    self.age = age</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> types <span class="keyword">import</span> MethodType</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.set_age = MethodType(set_age, s) <span class="comment"># 给实例绑定一个方法</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.set_age(<span class="number">25</span>) <span class="comment"># 调用实例方法</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s.age <span class="comment"># 测试结果</span></span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure><p>可以直接给类动态绑定方法</p><p>A.set_age=set_age</p><p>函数对象有一个<code>__name__</code>属性，可以拿到函数的名字</p></li><li><p>为了达到限制的目的，Python允许在定义class的时候，定义一个特殊的<code>__slots__</code>变量，来限制该class实例能添加的属性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>) <span class="comment"># 用tuple定义允许绑定的属性名称</span></span><br></pre></td></tr></table></figure><p>使用<code>__slots__</code>要注意，<code>__slots__</code>定义的属性仅对当前类实例起作用，对继承的子类是不起作用的</p><p>除非在子类中也定义<code>__slots__</code>，这样，子类实例允许定义的属性就是自身的<code>__slots__</code>加上父类的<code>__slots__</code>。</p><p>（怪怪的）</p></li><li><p>@property   @method_name.setter将方法变成类</p></li><li><p><em><strong>定制类</strong></em>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">--<span class="built_in">len</span>--:<span class="built_in">len</span>函数自动调用的计算长度工具</span><br><span class="line">--name--:获得当前函数的名族(functions.wraps(fun))</span><br><span class="line">--<span class="built_in">str</span>--:返回用户信息</span><br><span class="line">--<span class="built_in">repr</span>--:返回开发者信息</span><br><span class="line">--<span class="built_in">iter</span>--:返回迭代对象，使一个类可以被<span class="keyword">for</span> <span class="keyword">in</span>使用</span><br><span class="line">--<span class="built_in">next</span>--:迭代将调用--<span class="built_in">next</span>--方法</span><br><span class="line">--getitem--:实现下标访问[]（切片要分类。。。不懂）</span><br><span class="line">--setitem--:把对象视作<span class="built_in">list</span>/<span class="built_in">dict</span>来赋值</span><br><span class="line">--delitem--:删除某元素</span><br><span class="line">--<span class="built_in">getattr</span>--:在没有找到属性/方法时返回定义好的，可实现动态调用！</span><br><span class="line">--call--:直接对实例进行调用！可调用对象是Callable</span><br><span class="line">Python的官方文档:</span><br><span class="line">  https://docs.python.org/<span class="number">3</span>/reference/datamodel.html<span class="comment">#special-method-names</span></span><br></pre></td></tr></table></figure></li><li><p>枚举：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> enum <span class="keyword">import</span> Enum，unique</span><br><span class="line">Month = Enum(<span class="string">&#x27;Month&#x27;</span>, (<span class="string">&#x27;Jan&#x27;</span>, <span class="string">&#x27;Feb&#x27;</span>, <span class="string">&#x27;Mar&#x27;</span>, <span class="string">&#x27;Apr&#x27;</span>, <span class="string">&#x27;May&#x27;</span>, <span class="string">&#x27;Jun&#x27;</span>, <span class="string">&#x27;Jul&#x27;</span>, <span class="string">&#x27;Aug&#x27;</span>, <span class="string">&#x27;Sep&#x27;</span>, <span class="string">&#x27;Oct&#x27;</span>, <span class="string">&#x27;Nov&#x27;</span>, <span class="string">&#x27;Dec&#x27;</span>))</span><br></pre></td></tr></table></figure><p><em>value默认从1开始！！！！</em></p><p>用@unique精确控制Enum衍生</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@unique</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Weekday</span>(<span class="params">Enum</span>):</span></span><br><span class="line">    Sun = <span class="number">0</span> <span class="comment"># Sun的value被设定为0</span></span><br><span class="line">    Mon = <span class="number">1</span></span><br><span class="line">    Tue = <span class="number">2</span></span><br><span class="line">    Wed = <span class="number">3</span></span><br><span class="line">    Thu = <span class="number">4</span></span><br><span class="line">    Fri = <span class="number">5</span></span><br><span class="line">    Sat = <span class="number">6</span></span><br><span class="line">    day1=Weekday.Mon</span><br><span class="line">    day1==Weekday(<span class="number">1</span>)</span><br><span class="line">    day1.value==<span class="number">1</span></span><br></pre></td></tr></table></figure><p>用.value获得对应的值</p></li><li><p>动态语言和静态语言最大的不同，就是函数和类的定义，不是编译时定义的，而是运行时动态创建的，而创建class的方法就是使用<code>type()</code>函数，所以类的类型是‘type’。</p></li><li><p>object是python的默认类，有很多的方法，python种默认的list,str,dict等等都是继承了object类的方法，继承了object的类属于新式类 ，没有继承属于经典类，在python3种默认都是新式类，也即是所有的自定义类，基类都会继承object类！</p></li><li><p>type也可创建新类</p><ol><li>class的名称；</li><li>继承的父类集合</li><li>class的方法名称与函数绑定，</li></ol></li><li><p>先定义metaclass，就可以创建类，最后创建实例。</p><p>所以，metaclass允许你创建类或者修改类。换句话说，你可以把类看成是metaclass创建出来的“实例”，它可以改变类创建时的行为。</p><p>metaclass是Python面向对象里最难理解，也是最难使用的魔术代码。。。</p><p>按照默认习惯，metaclass的类名总是以Metaclass结尾</p><p>（写法着实奇怪。。不放了。。希望这辈子碰不到！听说ORM要用。。）</p><p>url：<a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017592449371072#0">使用元类 - 廖雪峰的官方网站 (liaoxuefeng.com)</a></p></li></ol><h3 id="错误-amp-异常"><a href="#错误-amp-异常" class="headerlink" title="错误&amp;异常"></a>错误&amp;异常</h3><ol><li><p>错误衍生：</p><p>The class hierarchy for built-in exceptions is:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">BaseException</span><br><span class="line"> +-- SystemExit</span><br><span class="line"> +-- KeyboardInterrupt</span><br><span class="line"> +-- GeneratorExit</span><br><span class="line"> +-- Exception</span><br><span class="line">      +-- StopIteration</span><br><span class="line">      +-- StopAsyncIteration</span><br><span class="line">      +-- ArithmeticError</span><br><span class="line">      |    +-- FloatingPointError</span><br><span class="line">      |    +-- OverflowError</span><br><span class="line">      |    +-- ZeroDivisionError</span><br><span class="line">      +-- AssertionError</span><br><span class="line">      +-- AttributeError</span><br><span class="line">      +-- BufferError</span><br><span class="line">      +-- EOFError</span><br><span class="line">      +-- ImportError</span><br><span class="line">      |    +-- ModuleNotFoundError</span><br><span class="line">      +-- LookupError</span><br><span class="line">      |    +-- IndexError</span><br><span class="line">      |    +-- KeyError</span><br><span class="line">      +-- MemoryError</span><br><span class="line">      +-- NameError</span><br><span class="line">      |    +-- UnboundLocalError</span><br><span class="line">      +-- OSError</span><br><span class="line">      |    +-- BlockingIOError</span><br><span class="line">      |    +-- ChildProcessError</span><br><span class="line">      |    +-- ConnectionError</span><br><span class="line">      |    |    +-- BrokenPipeError</span><br><span class="line">      |    |    +-- ConnectionAbortedError</span><br><span class="line">      |    |    +-- ConnectionRefusedError</span><br><span class="line">      |    |    +-- ConnectionResetError</span><br><span class="line">      |    +-- FileExistsError</span><br><span class="line">      |    +-- FileNotFoundError</span><br><span class="line">      |    +-- InterruptedError</span><br><span class="line">      |    +-- IsADirectoryError</span><br><span class="line">      |    +-- NotADirectoryError</span><br><span class="line">      |    +-- PermissionError</span><br><span class="line">      |    +-- ProcessLookupError</span><br><span class="line">      |    +-- TimeoutError</span><br><span class="line">      +-- ReferenceError</span><br><span class="line">      +-- RuntimeError</span><br><span class="line">      |    +-- NotImplementedError</span><br><span class="line">      |    +-- RecursionError</span><br><span class="line">      +-- SyntaxError</span><br><span class="line">      |    +-- IndentationError</span><br><span class="line">      |         +-- TabError</span><br><span class="line">      +-- SystemError</span><br><span class="line">      +-- TypeError</span><br><span class="line">      +-- ValueError</span><br><span class="line">      |    +-- UnicodeError</span><br><span class="line">      |         +-- UnicodeDecodeError</span><br><span class="line">      |         +-- UnicodeEncodeError</span><br><span class="line">      |         +-- UnicodeTranslateError</span><br><span class="line">      +-- Warning</span><br><span class="line">           +-- DeprecationWarning</span><br><span class="line">           +-- PendingDeprecationWarning</span><br><span class="line">           +-- RuntimeWarning</span><br><span class="line">           +-- SyntaxWarning</span><br><span class="line">           +-- UserWarning</span><br><span class="line">           +-- FutureWarning</span><br><span class="line">           +-- ImportWarning</span><br><span class="line">           +-- UnicodeWarning</span><br><span class="line">           +-- BytesWarning</span><br><span class="line">           +-- ResourceWarning</span><br></pre></td></tr></table></figure></li><li><p>try .. except.. excepy…else…finally</p><p>使用<code>try...except</code>捕获错误还有一个巨大的好处，就是可以跨越多层调用，比如函数<code>main()</code>调用<code>bar()</code>，<code>bar()</code>调用<code>foo()</code>，结果<code>foo()</code>出错了，这时，只要<code>main()</code>捕获到了，就可以处理</p></li><li><p>如果错误没有被捕获，它就会一直往上抛，最后被Python解释器捕获，打印一个错误信息，然后程序退出.</p><p>顺着错误信息一路向下就可以找到根源</p></li><li><p>logging可以记录错误信息，要配置。。。<a href="https://www.jianshu.com/p/feb86c06c4f4">python logging模块使用教程 -</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">try</span>://</span><br><span class="line"><span class="keyword">except</span>: Excerption <span class="keyword">as</span> e:</span><br><span class="line">    logging.excerption(e)</span><br></pre></td></tr></table></figure><p>这样，在抛出错误信息后继续运行</p><p>当前函数不知道应该怎么处理该错误，所以，最恰当的方式是继续往上抛，让顶层调用者去处理，raise不带参数则原样抛出</p></li><li><p>assert … , ‘decleration’可以在解释时<code>python -O file.py</code>来终止调用assert</p><p>关闭后，你可以把所有的<code>assert</code>语句当成<code>pass</code>来看</p></li><li><p>logging.info()输出一段文本</p><p>在import logging后加<code>logging.basicConfig(level=logging.INFO)</code>指定记录信息的级别</p><p>error&gt;warning&gt;info&gt;debug，上面规定INFO后，logging.debug就失效了</p></li><li><p>PDB我不想学。。不如IDE自带</p></li><li><p>测试unittest参见《入门》</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python -m unittest mydict_test</span><br></pre></td></tr></table></figure><p>可以直接启用测试，常用的assetRaises,Equal,NotEqual,True,False,In,NotIn</p><p>在单元测试中编写两个特殊的<code>setUp()</code>和<code>tearDown()</code>方法。这两个方法会分别在每调用一个测试方法的前后分别被执行</p></li><li><p>Python内置的“文档测试”（doctest）模块可以直接提取注释中的代码并执行测试。</p><p>doctest严格按照Python交互式命令行的输入和输出来判断测试结果是否正确。只有测试异常的时候，可以用<code>...</code>表示中间一大段烦人的输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> doctest</span><br><span class="line">    doctest.testmod()</span><br></pre></td></tr></table></figure></li></ol><h2 id="功能函数"><a href="#功能函数" class="headerlink" title="功能函数"></a>功能函数</h2><ol><li><p><code>str.replace(&#39;a&#39;,&#39;A&#39;) 把字符串里的a替换成A</code></p></li><li><p>abs（）绝对值，max（）返回最大值</p></li><li><p>help(function_name)放到print里克查看帮助信息</p></li><li><p>int，float，str，bool 内置数据类型转换</p></li><li><p>hex（）函数把一个整数转换成十六进制表示的字符串</p></li><li><p>内置函数<code>isinstance()</code>用于数据类型检查，如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">isinstance</span>(x, (<span class="built_in">int</span>, <span class="built_in">float</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], (<span class="built_in">list</span>, <span class="built_in">tuple</span>))</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">isinstance</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="built_in">list</span>, <span class="built_in">tuple</span>))</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure></li><li><p><code>map()</code>函数接收两个参数，一个是函数，一个是<code>Iterable</code>，<code>map</code>将传入的函数依次作用到序列的每个元素，并把结果作为新的<code>Iterator</code>返回。</p></li><li><p><code>reduce</code>把一个函数作用在一个序列<code>[x1, x2, x3, ...]</code>上，这个函数必须接收两个参数，<code>reduce</code>把结果继续和序列的下一个元素做累积计算，其效果就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reduce(f, [x1, x2, x3, x4]) = f(f(f(x1, x2), x3), x4)</span><br></pre></td></tr></table></figure></li><li><p><code>filter()</code>接收一个函数和一个序列，把传入的函数依次作用于每个元素，然后根据返回值是<code>True</code>还是<code>False</code>决定保留还是丢弃该元素，并返回的是一个<code>Iterator</code></p></li><li><p>sorted（列表，映射函数，reverse=True）</p><p>比较对每一项使用映射函数后的新列表！</p></li><li><p>基本类型都可以用<code>type()</code>判断，返回相应class</p><p>可以使用<code>types</code>模块中定义的常量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> types</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">fn</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(fn)==types.FunctionType</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(<span class="built_in">abs</span>)==types.BuiltinFunctionType</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(<span class="keyword">lambda</span> x: x)==types.LambdaType</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>((x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)))==types.GeneratorType</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure></li><li><p><code>dir()</code>函数，它返回一个包含字符串的list获得一个对象的所有属性和方法</p></li><li><p>```python<br>getattr()<code>、</code>setattr()<code>以及</code>hasattr()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">可以分别验证，设置，得到某个instance的属性和方法</span><br><span class="line"></span><br><span class="line">如果试图获取不存在的属性，会抛出AttributeError的错误：</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;python</span><br><span class="line">&gt;&gt;&gt; getattr(obj, &#39;z&#39;) # 获取属性&#39;z&#39;</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">AttributeError: &#39;MyObject&#39; object has no attribute &#39;z&#39;</span><br></pre></td></tr></table></figure><p>可以传入一个default参数，如果属性不存在，就返回默认值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">getattr</span>(obj, <span class="string">&#x27;z&#x27;</span>, <span class="number">404</span>) <span class="comment"># 获取属性&#x27;z&#x27;，如果不存在，返回默认值404</span></span><br></pre></td></tr></table></figure></li><li><pre><code class="python"> raise ValueError(&#39;score must be an integer!&#39;)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">15. eval()解析字符串为指令</span><br><span class="line"></span><br><span class="line">## 一些包</span><br><span class="line"></span><br><span class="line">1. math包用很多常用数学函数</span><br><span class="line"></span><br><span class="line">2. Python内置的&#96;enumerate&#96;函数可以把一个list变成索引-元素对，这样就可以在&#96;for&#96;循环中同时迭代索引和元素本身：</span><br><span class="line"></span><br></pre></td></tr></table></figure>&gt;&gt;&gt; for i, value in enumerate([&#39;A&#39;, &#39;B&#39;, &#39;C&#39;]):...     print(i, value)...0 A1 B2 C</code></pre></li></ol><h2 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h2><ol><li><p>正常的函数和变量名是公开的（public），可以被直接引用，比如：<code>abc</code>，<code>x123</code>，<code>PI</code>等；</p><p>类似<code>__xxx__</code>这样的变量是特殊变量，可以被直接引用，但是有特殊用途，比如上面的<code>__author__</code>，<code>__name__</code>就是特殊变量，<code>hello</code>模块定义的文档注释也可以用特殊变量<code>__doc__</code>访问，我们自己的变量一般不要用这种变量名；</p><p>类似<code>_xxx</code>和<code>__xxx</code>这样的函数或变量就是非公开的（private），不应该被直接引用，比如<code>_abc</code>，<code>__abc</code>等；</p></li></ol><h2 id="以后再学"><a href="#以后再学" class="headerlink" title="以后再学"></a>以后再学</h2><ol><li><a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017590712115904" title="廖雪峰">定制类</a></li><li></li></ol>]]></content>
    
    
    <summary type="html">跟着廖雪峰教程先学学python语法，马上开坑web后端</summary>
    
    
    
    <category term="skills" scheme="http://example.com/categories/skills/"/>
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>密码学</title>
    <link href="http://example.com/2021/03/07/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    <id>http://example.com/2021/03/07/%E5%AF%86%E7%A0%81%E5%AD%A6/</id>
    <published>2021-03-07T12:56:25.000Z</published>
    <updated>2021-03-07T12:58:55.415Z</updated>
    
    <content type="html"><![CDATA[<h1 id="密码学常用解码网站"><a href="#密码学常用解码网站" class="headerlink" title="密码学常用解码网站"></a><a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9230757.html">密码学常用解码网站</a></h1><span id="more"></span><p>xssee:[<a href="http://web2hack.org/xssee">http://web2hack.org/xssee</a></p><p>](<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn</a>)<br>xssee:<a href="http://evilcos.me/lab/xssee">http://evilcos.me/lab/xssee</a></p><p>程默的博客(DES,3DES,AES,RC,Blowfish,Twofish,Serpent,Gost,Rijndael,Cast,Xtea,RSA):<a href="http://tool.chacuo.net/cryptdes">http://tool.chacuo.net/cryptdes</a></p><p>在线编码解码(多种并排):[<a href="http://bianma.911cha.com/">http://bianma.911cha.com</a></p><p>](<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn</a>)<br>在线加密解密(多种):<a href="http://encode.chahuo.com/">http://encode.chahuo.com</a></p><p>Unicode转中文:<a href="http://www.bejson.com/convert/unicode_chinese">http://www.bejson.com/convert/unicode_chinese</a></p><p>栅栏密码 &amp;&amp; 凯撒密码 &amp;&amp; 摩斯电码:<a href="http://heartsnote.com/tools/cipher.htm">http://heartsnote.com/tools/cipher.htm</a></p><p>Caesar cipher(凯撒密码):[<a href="http://planetcalc.com/1434/">http://planetcalc.com/1434/</a></p><p>](<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn</a>)<br>Quoted-Printable &amp;&amp; ROT13:<a href="http://www.mxcz.net/tools/QuotedPrintable.aspx">http://www.mxcz.net/tools/QuotedPrintable.aspx</a></p><p>ROT5/13/18/47编码转换:<a href="http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php">http://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php</a></p><p>Base32/16:<a href="http://pbaseconverter.com/">http://pbaseconverter.com/</a></p><p>Base32:<a href="https://tools.deamwork.com/crypt/decrypt/base32decode.html">https://tools.deamwork.com/crypt/decrypt/base32decode.html</a></p><p>quipqiup古典密码自动化爆破(词频分析):<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">http://quipqiup.com/index.php</a></p><p>词频分析/替换:<a href="http://cryptoclub.org/tools/cracksub_topframe.php">http://cryptoclub.org/tools/cracksub_topframe.php</a></p><p>‘+.&lt;&gt;[]’ &amp;&amp; ‘!.?’(Brainfuck/Ook!):<a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a></p><p>‘+-.&lt;&gt;[]’(Brainfuck):<a href="https://www.nayuki.io/page/brainfuck-interpreter-javascript">https://www.nayuki.io/page/brainfuck-interpreter-javascript</a></p><p>‘+-.&lt;&gt;[]’(Brainfuck):<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">http://esoteric.sange.fi/brainfuck/impl/interp/i.html</a></p><p>‘()[]!+’JavaScript编码(JSfuck):<a href="http://discogscounter.getfreehosting.co.uk/js-noalnum.php">http://discogscounter.getfreehosting.co.uk/js-noalnum.php</a></p><p>用 6 个字符’()[]!+’来编写 JavaScript 程序(JSfuck同上):<a href="http://www.jsfuck.com/">http://www.jsfuck.com/</a></p><p><a href="http://patriciopalladino.com/files/hieroglyphy/">http://patriciopalladino.com/files/hieroglyphy/</a></p><p>摩斯密码翻译器:<a href="http://www.jb51.net/tools/morse.htm">http://www.jb51.net/tools/morse.htm</a></p><p>Morse Code摩尔斯电码:<a href="http://rumkin.com/tools/cipher/morse.php">http://rumkin.com/tools/cipher/morse.php</a></p><p>字符串编码，解码，转换(长度,反转,进制转换):<a href="http://www.5ixuexiwang.com/str/">http://www.5ixuexiwang.com/str/</a></p><p>Cisco Type 7 Reverser:<a href="http://packetlife.net/toolbox/type7">http://packetlife.net/toolbox/type7</a></p><p>Cisco:<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">http://www.ifm.net.nz/cookbooks/passwordcracker.html</a></p><p>cmd5 &amp;&amp; NTLM &amp;&amp; mysql…:<a href="http://www.cmd5.com/">http://www.cmd5.com</a></p><p>spammimic(字符2一段话):<a href="http://www.spammimic.com/">http://www.spammimic.com/</a></p><p>js代码在线加密解密:<a href="https://tool.lu/js/">https://tool.lu/js/</a></p><p>JScript/VBscript脚本解密(#@<del>^….^#</del>@):<a href="http://www.dheart.net/decode/index.php">http://www.dheart.net/decode/index.php</a></p><p>VBScript.Encode解密(tip:Asp encode):<a href="http://adophper.com/encode.html">http://adophper.com/encode.html</a></p><p>JScript.Encode脚本加密与解密:<a href="http://www.haokuwang.com/jsendecode.htm">http://www.haokuwang.com/jsendecode.htm</a></p><p>‘+/v+’UTF-7加密:<a href="http://web2hack.org/xssee">http://web2hack.org/xssee</a></p><p>各种无知密码解密:<a href="http://www.tools88.com/">http://www.tools88.com</a></p><p>uuencode解码 &amp;&amp; xxencode解码(古老的邮件密码):<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">http://web.chacuo.net/charsetuuencode</a></p><p>MIME标准(邮件编码的一种):<a href="http://dogmamix.com/MimeHeadersDecoder/">http://dogmamix.com/MimeHeadersDecoder/</a></p><p>Binhex编码(邮件编码的一种,常见于MAC机):<a href="http://encoders-decoders.online-domain-tools.com/">http://encoders-decoders.online-domain-tools.com/</a></p><p>%u8001%u9525非/u的hex，%u编码，只能编码汉字(xssee):<a href="http://web.chacuo.net/charsetescape">http://web.chacuo.net/charsetescape</a></p><p>猪圈密码:<a href="http://www.simonsingh.net/The_Black_Chamber/pigpen.html">http://www.simonsingh.net/The_Black_Chamber/pigpen.html</a></p><p>ppencode(把Perl代码转换成只有英文字母的字符串):<a href="http://namazu.org/~takesako/ppencode/demo.html">http://namazu.org/~takesako/ppencode/demo.html</a></p><p>rrencode(把ruby代码全部转换成符号):挂了</p><p>aaencode(JS代码转换成常用的网络表情，也就是我们说的颜文字js加密):[<a href="http://utf-8.jp/public/aaencode.html">http://utf-8.jp/public/aaencode.html</a></p><p>](<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn</a>)<br>‘()[]!+’ &amp;&amp; ‘$=~[]+”_.();’jother编码jjencode(JS代码转换成只有符号的字符串):<a href="http://web2hack.org/xssee">http://web2hack.org/xssee</a></p><p>jother（是一种运用于javascript语言中利用少量字符构造精简的匿名函数方法对于字符串进行的编码方式。其中8个少量字符包括：! + ( ) [ ] { }。只用这些字符就能完成对任意字符串的编码）:<a href="http://tmxk.org/jother/">http://tmxk.org/jother/</a></p><p>jjencode/aaencode可用xssee &amp;&amp; Chrome的Console模式来直接输出解密。</p><p>Manchester曼彻斯特解密：<a href="http://eleif.net/manchester.html">http://eleif.net/manchester.html</a></p><p>Vigenère维多利亚解密：<a href="https://www.guballa.de/vigenere-solver">https://www.guballa.de/vigenere-solver</a></p><p>Vigenère cipher:<a href="http://planetcalc.com/2468/">http://planetcalc.com/2468/</a></p><p>Hill cipher(希尔密码):<a href="http://planetcalc.com/3327/">http://planetcalc.com/3327/</a></p><p>Atbash cipher(埃特巴什码):<a href="http://planetcalc.com/4647/">http://planetcalc.com/4647/</a></p><p>snow(html隐写):<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">http://fog.misty.com/perry/ccs/snow/snow/snow.html</a></p><p>Serpent加密解密:<a href="http://serpent.online-domain-tools.com/">http://serpent.online-domain-tools.com/</a></p><p>十六进制Hex转文本字符串:<a href="http://www.bejson.com/convert/ox2str/">http://www.bejson.com/convert/ox2str/</a></p><p>Hex2text:<a href="http://www.convertstring.com/EncodeDecode/HexDecode">http://www.convertstring.com/EncodeDecode/HexDecode</a></p><p>Binary(二进制)，ACSII,Hex(十六进制),Decimal(十进制):<a href="http://www.binaryhexconverter.com/">http://www.binaryhexconverter.com/</a></p><p>集合:<a href="http://www.qqxiuzi.cn/daohang.htm">http://www.qqxiuzi.cn/daohang.htm</a></p><p>集合（各种古典密码）:<a href="http://rumkin.com/tools/cipher/">http://rumkin.com/tools/cipher/</a></p><p>文本加密为汉字(“盲文”，音符，各种语言，花朵，箭头…):<a href="http://www.qqxiuzi.cn/bianma/wenbenjiami.php">http://www.qqxiuzi.cn/bianma/wenbenjiami.php</a></p><p>在线工具集合:<a href="http://tomeko.net/online_tools/">http://tomeko.net/online_tools/</a></p><p>二维码/条形码:<a href="https://online-barcode-reader.inliteresearch.com/">https://online-barcode-reader.inliteresearch.com/</a></p><p>生成二维码:<a href="http://www.wwei.cn/">http://www.wwei.cn/</a></p><p>在线二维码解密:<a href="http://jiema.wwei.cn/">http://jiema.wwei.cn/</a></p><p>Image2Base64:<a href="http://www.vgot.net/test/image2base64.php">http://www.vgot.net/test/image2base64.php</a></p><p>与佛论禅:<a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx">http://www.keyfc.net/bbs/tools/tudoucode.aspx</a></p><p>在线分解GIF帧图:<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">http://zh.bloggif.com/gif-extract</a></p><p>bejson(杂乱):<a href="http://www.bejson.com/">http://www.bejson.com</a></p><p>atool(杂乱):<a href="http://www.atool.org/">http://www.atool.org</a></p><p>Punch Card:<a href="http://www.kloth.net/services/cardpunch.php">http://www.kloth.net/services/cardpunch.php</a></p><p>分解素数(ESA):[<a href="http://www.factordb.com/index.php">http://www.factordb.com/index.php</a></p><p>](<a href="https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn">https://bbs.ichunqiu.com/thread-32105-1-1.html?from=csdn</a>)<br>文件在线Hash:<a href="http://www.atool.org/file_hash.php">http://www.atool.org/file_hash.php</a></p><p>作　　者：**<a href="https://www.cnblogs.com/ECJTUACM-873284962/">Angel_Kitty</a>**<br>出　　处：<a href="https://www.cnblogs.com/ECJTUACM-873284962/">https://www.cnblogs.com/ECJTUACM-873284962/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;密码学常用解码网站&quot;&gt;&lt;a href=&quot;#密码学常用解码网站&quot; class=&quot;headerlink&quot; title=&quot;密码学常用解码网站&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/ECJTUACM-873284962/p/9230757.html&quot;&gt;密码学常用解码网站&lt;/a&gt;&lt;/h1&gt;</summary>
    
    
    
    <category term="tools" scheme="http://example.com/categories/tools/"/>
    
    
    <category term="cyber safe" scheme="http://example.com/tags/cyber-safe/"/>
    
  </entry>
  
  <entry>
    <title>hexo初始文档</title>
    <link href="http://example.com/2021/03/07/hello-world/"/>
    <id>http://example.com/2021/03/07/hello-world/</id>
    <published>2021-03-07T05:36:07.816Z</published>
    <updated>2021-03-07T05:36:07.816Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">hexo自带的文档，没啥用，留着吧</summary>
    
    
    
    <category term="others" scheme="http://example.com/categories/others/"/>
    
    
  </entry>
  
  <entry>
    <title>完成todolist</title>
    <link href="http://example.com/2021/03/06/%E5%AE%8C%E6%88%90todolist/"/>
    <id>http://example.com/2021/03/06/%E5%AE%8C%E6%88%90todolist/</id>
    <published>2021-03-06T13:36:35.000Z</published>
    <updated>2021-03-07T05:36:07.817Z</updated>
    
    <content type="html"><![CDATA[<h1 id="澳新第二题："><a href="#澳新第二题：" class="headerlink" title="澳新第二题："></a>澳新第二题：</h1><p>[toc]</p><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>这道todolist卡了我一整天，因为光学那个b站视频缺少大量的知识，于是我还是在网上找了一个学习，不过经历非常失败，我找了个简单的试图把它改成可以本地存储的，但是出现了很奇怪的bug，但最终理清了很多关系，最终找到了这个版本，很快就上手了</p><h2 id="jQuery知识"><a href="#jQuery知识" class="headerlink" title="jQuery知识"></a>jQuery知识</h2><p>最外层 $(function){ …}</p><p>$(‘选择器’).(this)</p><p>parent().children().siblings()这里面可以加选择器</p><p>.slideup(mm,(function()))</p><p>.first().next().eq(index)</p><p>.addClass().removeClass().html().text()</p><p>.css(‘key’,’value’)</p><p>.on(‘event’,function(){})  相当于添加监听器</p><p>.find(‘选择器’).filter(‘:first’)</p><p>.closet(‘选择器’)//最近祖先</p><p>.remove().hide().togger().</p><p>if(.is(‘选择器’))</p><p>.prepend(“代码”)超级方便！</p><p>.append也行？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.each(arr1,function(i,val)&#123; &#x2F;&#x2F;两个参数，第一个参数表示遍历的数组的下标，第二个参数表示下标对应的值</span><br></pre></td></tr></table></figure><p>val() 方法返回或设置被选元素的 value 属性</p><p>splice(index,number,(new item)) 方法向/从数组中添加/删除项目，然后返回被删除的项目。</p><p>attr() 方法设置或返回被选元素的属性值，俩参数就是设置，一参数就是返回（用于html）</p><p>prop同上，配套removeprop</p><p>jQ里创建的变量前面最好加上$</p><p>setInterval(function,time)每隔time触发一次function</p><p>clearinterval(setinterval(..))</p><p>回调地狱（感觉不难理解其实。。）</p><p>js函数特色，回调</p><p>.animate({一组css（变化用-=或+=）},time,callback)</p><p>一级一级变量减少查询时间</p><p>保留对象的话同级可以叠加如：对象.on().on()</p><p>异步里还要多担心一个执行时间，双线进行时并非按直接顺序，若某节点需要引用另一线的结论，要判断另一线和该节点的执行顺序，太强了我去，可以监听父元素，这将对未来创建的进行监听。。哎呀还是太乱了，得看书才行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">ajax：</span><br><span class="line"></span><br><span class="line"><span class="comment">//success函数里的this引用Ajax对象</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">url: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;...&#125;,</span><br><span class="line">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;...&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> order = &#123;</span><br><span class="line">name : $name.val(),</span><br><span class="line">    ..</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">type: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">url: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">data:... ,</span><br><span class="line">success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;...&#125;,</span><br><span class="line">error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;...&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">&#x27;DELETE&#x27;</span>,</span><br><span class="line">    url:<span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">    success:,</span><br><span class="line">    error:,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>根据RESTful规则使用put，get，delete，push，post</p><p>restful规则理解最好是：[戳我](<a href="https://www.jianshu.com/p/84568e364ee8">深入理解什么是RESTful API ？ - 简书 (jianshu.com)</a>)</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个200行项目让我学到了一堆东西，jq的函数就学了20多个，还有localstorage的用法，不过这个项目采用的数据结构感觉怪怪的，应该是我太菜了，json学习链接先放这 [JSON]<a href="https://www.json.org/json-en.html">新建标签页 (json.org)</a> 不过jq比js内置的方便好多啊啊！！！</p><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><p><u>因为没有了解Js一些核心原理，对渲染，更新和执行顺序的概念理解一般，到时候看看红宝书吧！</u></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 参考https://blog.csdn.net/weixin_43836057/article/details/103548390 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .w &#123;</span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">900px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .header &#123;</span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#444</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .header-w &#123;</span><br><span class="line"><span class="css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .logo &#123;</span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .add &#123;</span><br><span class="line"><span class="css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="css">            <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">58px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: right;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.add</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .title &#123;</span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">80px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.title</span> <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .title .count &#123;</span><br><span class="line"><span class="css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">80px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.title</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">6px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#todolist</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-left</span>: <span class="number">7px</span> solid <span class="number">#388E8E</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#donelist</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-left</span>: <span class="number">7px</span> solid <span class="number">#999</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">5</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#todolist</span> <span class="selector-tag">input</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#donelist</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">25px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#todolist</span> <span class="selector-tag">p</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#donelist</span> <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#todolist</span> <span class="selector-tag">a</span>,</span></span><br><span class="line"><span class="css">        <span class="selector-id">#donelist</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#999</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">footer</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: <span class="number">#999</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .del &#123;</span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">flex-grow</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://libs.baidu.com/jquery/2.1.4/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            load();</span><br><span class="line"><span class="javascript">            <span class="comment">// 1. 按下回车 把完整数据 存储到本地存储里面</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 存储的数据格式 var todolist = [&#123;title: &quot;xxx&quot;, done: false&#125;]</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;#title&quot;</span>).on(<span class="string">&quot;keydown&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span></span><br><span class="line">                if (event.keyCode === 13) &#123;</span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span> ($(<span class="built_in">this</span>).val() === <span class="string">&quot;&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&quot;请输入内容！&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 先读取本地数据存储的原来的数据</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> local = getData();</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// console.log(local);</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 把local数组进行更新数据 把最新的数据追加给local数组</span></span></span><br><span class="line">                        local.push(&#123;</span><br><span class="line"><span class="javascript">                            title: $(<span class="built_in">this</span>).val(),</span></span><br><span class="line"><span class="javascript">                            done: <span class="literal">false</span></span></span><br><span class="line">                        &#125;);</span><br><span class="line"><span class="javascript">                        <span class="comment">// 把这个数组local存储到本地存储</span></span></span><br><span class="line">                        saveData(local);</span><br><span class="line"><span class="javascript">                        <span class="comment">// 2. 把本地存储的数据渲染出来</span></span></span><br><span class="line">                        load();</span><br><span class="line"><span class="javascript">                        $(<span class="built_in">this</span>).val(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"><span class="javascript">            <span class="comment">// 3. todolist 删除操作</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;ol, ul&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// alert(11);</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> data = getData();</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> index = $(<span class="built_in">this</span>).attr(<span class="string">&quot;id&quot;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//删除所选数据</span></span></span><br><span class="line">                data.splice(index, 1);</span><br><span class="line">                saveData(data);</span><br><span class="line">                load();</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            <span class="comment">// 4. todolist 正在进行和已完成的操作</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;ol, ul&quot;</span>).on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;input&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 先获取本地存储的数据</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> data = getData();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 修改数据</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> index = $(<span class="built_in">this</span>).siblings(<span class="string">&quot;a&quot;</span>).attr(<span class="string">&quot;id&quot;</span>);</span></span><br><span class="line"><span class="javascript">                data[index].done = $(<span class="built_in">this</span>).prop(<span class="string">&quot;checked&quot;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 保存到本地存储</span></span></span><br><span class="line">                saveData(data);</span><br><span class="line">                load();</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//以下为函数</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">// 读取本地存储的数据</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> data = <span class="built_in">localStorage</span>.getItem(<span class="string">&quot;todolist&quot;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (data !== <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 本地存储里面的数据都是字符串格式的 需要转换格式</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">JSON</span>.parse(data);</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> [];</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="comment">// 保存本地存储数据</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">saveData</span>(<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">localStorage</span>.setItem(<span class="string">&quot;todolist&quot;</span>, <span class="built_in">JSON</span>.stringify(data));</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="comment">// 渲染加载数据</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> data = getData();</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 遍历之前先清空ol里面的元素内容！！</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">&quot;ol, ul&quot;</span>).empty();</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> todoCount = <span class="number">0</span>; <span class="comment">//正在进行的个数</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> doneCount = <span class="number">0</span>; <span class="comment">// 完成的个数</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="comment">// 遍历数据</span></span></span><br><span class="line"><span class="javascript">                $.each(data, <span class="function"><span class="keyword">function</span> (<span class="params">i, n</span>) </span>&#123;</span></span><br><span class="line">                    if (n.done) &#123;</span><br><span class="line"><span class="javascript">                        <span class="comment">//prepend插入标签</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//预先选定复选框或单选按钮</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                        $(&quot;ul&quot;).prepend(&quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;checkbox&#x27;</span> <span class="attr">checked</span>=<span class="string">&#x27;checked&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>&quot; + n.title + &quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;#&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;&quot; + i + &quot;&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;del&#x27;</span>&gt;</span>X<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;);</span></span></span><br><span class="line">                        doneCount++;</span><br><span class="line"><span class="javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                        $(&quot;ol&quot;).prepend(&quot;<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&#x27;checkbox&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>&quot; + n.title + &quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;#&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;&quot; + i + &quot;&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;del&#x27;</span>&gt;</span>X<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>&quot;);</span></span></span><br><span class="line">                        todoCount++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                <span class="comment">//text返回所有文本内容</span></span></span><br><span class="line"><span class="javascript">                $(<span class="string">&quot;#todoCount&quot;</span>).text(todoCount);</span></span><br><span class="line"><span class="javascript">                $(<span class="string">&quot;#doneCount&quot;</span>).text(doneCount);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- header start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header-w w&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;logo&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>ToDoList<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;add&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按回车输入&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- header end --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- main start --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main-w w&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;start&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>正在进行<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;todoCount&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ol</span> <span class="attr">id</span>=<span class="string">&quot;todolist&quot;</span> <span class="attr">class</span>=<span class="string">&quot;demo-box&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;end&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>已经完成<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;count&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;doneCount&quot;</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;donelist&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- main end --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">刚开始接触JS,JQ,RESTful，完成招新第二题todolist</summary>
    
    
    
    <category term="diary" scheme="http://example.com/categories/diary/"/>
    
    
    <category term="harvest" scheme="http://example.com/tags/harvest/"/>
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="http://example.com/2021/03/06/git/"/>
    <id>http://example.com/2021/03/06/git/</id>
    <published>2021-03-06T12:33:45.000Z</published>
    <updated>2021-03-07T05:36:07.816Z</updated>
    
    <content type="html"><![CDATA[<p>git init</p><p>git status</p><p>git add file</p><p>git commit -m “”</p><p>git log –oneline</p><p>git reflog</p><p>git reset –hard HEAD^(版本号)</p><p>HEAD^^  HEAD~100</p><p>git diff HEAD – file</p><p>查看工作区和版本库不同</p><p>命令<code>git checkout -- readme.txt</code>意思就是，把<code>readme.txt</code>文件在工作区的修改全部撤销，这里有两种情况：</p><p>一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</p><p>一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</p><p>checkout  -&gt; restore</p><p><code>git checkout</code>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”</p><p><code>git reset HEAD &lt;file&gt;</code>可以把暂存区的修改撤销掉（unstage）</p><p> `git reset HEAD -&gt; git restore –staged</p><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p><p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p><p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192">版本回退</a>一节，不过前提是没有推送到远程库。</p><p>远程</p><p>git remote -v</p><p>git remote remove origin</p><p>git remote add origin <a href="mailto:&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#117;&#x62;&#46;&#99;&#111;&#109;">&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#117;&#x62;&#46;&#99;&#111;&#109;</a>:git_username/repository_name.git</p><p>git pull origin master –allow-unrelated-histories</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>git push origin master</p><p>git push -u origin main -f 强制push！！</p><p>git clone url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;创建 &lt;name&gt; 的分支并切换</span><br><span class="line">git switch -c &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;创建</span><br><span class="line">git branch &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;切换到&lt;name&gt;分支</span><br><span class="line">git checkout &lt;name&gt;</span><br><span class="line">git switch &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看分支树</span><br><span class="line">git branch </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;删除分支</span><br><span class="line">git branch -d &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;合并分支 假设这里存在 master ， dev 分支</span><br><span class="line">  &#x2F;&#x2F; 1 切换到要保留的分支——这里是master</span><br><span class="line">  git checkout master</span><br><span class="line">  &#x2F;&#x2F; 2 合并掉分支dev</span><br><span class="line">  git merge dev</span><br></pre></td></tr></table></figure><p><code>git log --graph</code>命令可以看到分支合并图</p>]]></content>
    
    
    <summary type="html">git精简指令</summary>
    
    
    
    <category term="skills" scheme="http://example.com/categories/skills/"/>
    
    
  </entry>
  
  <entry>
    <title>澳新</title>
    <link href="http://example.com/2021/03/06/%E6%BE%B3%E6%96%B0/"/>
    <id>http://example.com/2021/03/06/%E6%BE%B3%E6%96%B0/</id>
    <published>2021-03-06T06:18:45.000Z</published>
    <updated>2021-03-07T05:36:07.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ANZJointLab-21春季招新题目"><a href="#ANZJointLab-21春季招新题目" class="headerlink" title="ANZJointLab 21春季招新题目"></a>ANZJointLab 21春季招新题目</h1><p>澳新联合实验室致力于校企合作培养具有软件工程实践素养的开发工程师，工作室涉及Web全栈开发方向（Web前端，后端，Flutter跨平台移动端开发，小程序开发），区块链开发方向，以下招新题目面向大一下新生，涉及git，前端，后端，Flutter等方面，一共7道题，1-3道题Web前端知识，第4题移动端Flutter开发知识，5，6题属于Golang后端内容，7属于git，第8题涉及git和前端知识，难度随分数大小递增，和题目顺序无关</p><p>所有题目使用MarkDown文档回答，要求实现截图和按照问题打包的源码压缩文件，每个问题一个压缩包，之后一并打包发送到邮箱<a href="mailto:&#x31;&#x35;&#55;&#50;&#55;&#x35;&#x34;&#56;&#x31;&#x30;&#64;&#113;&#x71;&#46;&#x63;&#x6f;&#109;">&#x31;&#x35;&#55;&#50;&#55;&#x35;&#x34;&#56;&#x31;&#x30;&#64;&#113;&#x71;&#46;&#x63;&#x6f;&#109;</a> </p><p>期望分数：40+，期望人数：10人</p><h2 id="Question1-HTML-and-CSS"><a href="#Question1-HTML-and-CSS" class="headerlink" title="Question1 HTML and CSS"></a>Question1 HTML and CSS</h2><h3 id="Score-：10"><a href="#Score-：10" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>html和CSS 是标记语言和样式语言，不具有图灵完备，和Word一样简单，是 Web开发的基础，无论是前端还是后端都需要了解基本的html和CSS基础</p><p>这部分建议4h完成</p><p>推荐教程： <a href="https://www.bilibili.com/video/BV17b41137yx">https://www.bilibili.com/video/BV17b41137yx</a> p1~p9</p><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><p>一个150*150的方框(颜色为aqua）在不同分辨率屏幕上下左右居中，鼠标移动到方框上能够改变颜色，同时点击它能够跳转至澳新银行页面。</p><p>澳新银行中国官网url ： <a href="https://institutional.anz.com/markets/china/zh-hans">https://institutional.anz.com/markets/china/zh-hans</a></p><h2 id="Question2-JavaScript（JS-ES"><a href="#Question2-JavaScript（JS-ES" class="headerlink" title="Question2 JavaScript（JS/ES)"></a>Question2 JavaScript（JS/ES)</h2><h3 id="Score-：20"><a href="#Score-：20" class="headerlink" title="Score ：20"></a>Score ：20</h3><h3 id="Introduction-1"><a href="#Introduction-1" class="headerlink" title="Introduction"></a>Introduction</h3><p>JavaScript是网页前端设计的脚本语言，解释型，弱类型，是Web开发必学语言</p><p>这部分建议8h完成</p><p>重点：Js语法，DOM操作</p><p>推荐教程： <a href="https://www.bilibili.com/video/BV17b41137yx">https://www.bilibili.com/video/BV17b41137yx</a> p10 ~ p18 </p><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question"></a>Question</h3><p>综合使用html，css，js实现一个简单的待定计划表（ToDoList）要求数据能够本地储存（即关闭网页后再打开时，计划依旧存在，提示：了解Cookie、Session），同时计划表具有增删功能。</p><h2 id="Question3-FrontEnd-Web-Request"><a href="#Question3-FrontEnd-Web-Request" class="headerlink" title="Question3 FrontEnd Web Request"></a>Question3 FrontEnd Web Request</h2><h3 id="Score-：-10"><a href="#Score-：-10" class="headerlink" title="Score ： 10"></a>Score ： 10</h3><h3 id="Introduction-2"><a href="#Introduction-2" class="headerlink" title="Introduction"></a>Introduction</h3><p>前后端交互主要通过前端发送网络请求实现</p><p>发送网络请求有原生的fetchAPI，JQuery，axios等实现方式</p><p>建议选择fetchAPI，JQuery入手学习</p><p>推荐教程： <a href="https://www.bilibili.com/video/BV17b41137yx">https://www.bilibili.com/video/BV17b41137yx</a> p21 ~ p30</p><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question"></a>Question</h3><ol><li>向百度官网发送GET请求，把返回的字段显示在页面上，（不必介意看起来很乱）</li><li>什么是RestFulAPi</li></ol><h2 id="Question4-Flutter"><a href="#Question4-Flutter" class="headerlink" title="Question4 Flutter"></a>Question4 Flutter</h2><h3 id="Score-：30"><a href="#Score-：30" class="headerlink" title="Score ：30"></a>Score ：30</h3><h3 id="Introduction-3"><a href="#Introduction-3" class="headerlink" title="Introduction"></a>Introduction</h3><p>Flutter是跨平台移动端开发UI框架，可以实现一套代码编译成安卓软件和Ios软件，基于Dart语言开发</p><p>推荐教程： <a href="https://jspang.com/detailed?id=58">https://jspang.com/detailed?id=58</a></p><h3 id="Question-3"><a href="#Question-3" class="headerlink" title="Question"></a>Question</h3><ol><li>配置好Flutter开发环境（Score：10）</li><li>使用Flutter实现如下功能：<ol><li>三栏Navigation页面<ol><li>一栏显示Hello ANZ + 一个按钮， 点击按钮更新内容为 Hello ANZJointLab</li><li>一栏显示一个滚动列表显示数字1-100</li><li>一栏显示一个图片</li></ol></li></ol></li></ol><h2 id="Question5-GoLang-Web"><a href="#Question5-GoLang-Web" class="headerlink" title="Question5 GoLang Web"></a>Question5 GoLang Web</h2><h3 id="Score-：10-1"><a href="#Score-：10-1" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction-4"><a href="#Introduction-4" class="headerlink" title="Introduction"></a>Introduction</h3><p>GoLang是Web后端的主流语言之一，语言类似于C，易上手，不需要搞懂所有特性，搞懂Go和已经学习的C语言内容的特性+Golang原生http库常用函数就可以上手本题</p><h3 id="Question-4"><a href="#Question-4" class="headerlink" title="Question"></a>Question</h3><p>使用Golang原生部署一个任意静态页面，部署到本地</p><h2 id="Question6-GoLang-Grom"><a href="#Question6-GoLang-Grom" class="headerlink" title="Question6 GoLang Grom"></a>Question6 GoLang Grom</h2><h3 id="Score-：30-40-50"><a href="#Score-：30-40-50" class="headerlink" title="Score ：30/40/50"></a>Score ：30/40/50</h3><h3 id="Introduction-5"><a href="#Introduction-5" class="headerlink" title="Introduction"></a>Introduction</h3><p>数据库和监听网络请求是后端的主要工作，数据库</p><h3 id="Question-5"><a href="#Question-5" class="headerlink" title="Question"></a>Question</h3><p>使用Golang实现一个TodoList网络应用，暴露增删改查接口，连接MySQL数据库实现数据的存储</p><p>部署到本地30分，</p><p>部署到云服务器+10分</p><p>连接前端页面+10分</p><h2 id="Question7-Git-GitHub"><a href="#Question7-Git-GitHub" class="headerlink" title="Question7 Git/GitHub"></a>Question7 Git/GitHub</h2><h3 id="Score-：10-2"><a href="#Score-：10-2" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction-6"><a href="#Introduction-6" class="headerlink" title="Introduction"></a>Introduction</h3><p>git是团队合作开发必须使用的版本管理工具</p><p>主要学习：文件监听，版本回溯，分支管理，远程仓库</p><h3 id="Question-6"><a href="#Question-6" class="headerlink" title="Question"></a>Question</h3><p>创建一个公开的Github仓库，与本地仓库链接，新建两个分支</p><h2 id="Question8-Build-Your-Own-Blog"><a href="#Question8-Build-Your-Own-Blog" class="headerlink" title="Question8 Build Your Own Blog"></a>Question8 Build Your Own Blog</h2><h3 id="Score-：10-3"><a href="#Score-：10-3" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction-7"><a href="#Introduction-7" class="headerlink" title="Introduction"></a>Introduction</h3><p>写技术博客树知识内化和方式，也是向别人展示你的知识技能的手段，使用Hexo和gitPage可以快速简单的搭建自己的技术博客</p><p>参考文章：</p><p><a href="https://blog.csdn.net/grave2015/article/details/79961843">https://blog.csdn.net/grave2015/article/details/79961843</a></p><h3 id="Question-7"><a href="#Question-7" class="headerlink" title="Question"></a>Question</h3><p>搭建自己的技术博客，附带链接，方式不限于Hexo + gitPage</p>]]></content>
    
    
    <summary type="html">澳新工作室招新题</summary>
    
    
    
    <category term="others" scheme="http://example.com/categories/others/"/>
    
    
    <category term="澳新" scheme="http://example.com/tags/%E6%BE%B3%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>first</title>
    <link href="http://example.com/2021/03/06/first/"/>
    <id>http://example.com/2021/03/06/first/</id>
    <published>2021-03-06T02:58:38.000Z</published>
    <updated>2021-03-07T05:36:07.815Z</updated>
    
    <content type="html"><![CDATA[<p>第一个博文该写什么呢：</p><p>佛曰：nocode</p>]]></content>
    
    
    <summary type="html">纪念一下我的第一个博文 2021-3-6</summary>
    
    
    
    <category term="diary" scheme="http://example.com/categories/diary/"/>
    
    
    <category term="FIRST" scheme="http://example.com/tags/FIRST/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Darren Blog</title>
  
  <subtitle>I hope this can help you</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-06T13:37:32.667Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Darren</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>被todolist折磨的一天</title>
    <link href="http://example.com/2021/03/06/%E8%A2%ABtodolist%E6%8A%98%E7%A3%A8%E7%9A%84%E4%B8%80%E5%A4%A9/"/>
    <id>http://example.com/2021/03/06/%E8%A2%ABtodolist%E6%8A%98%E7%A3%A8%E7%9A%84%E4%B8%80%E5%A4%A9/</id>
    <published>2021-03-06T13:36:35.000Z</published>
    <updated>2021-03-06T13:37:32.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="澳新第二题："><a href="#澳新第二题：" class="headerlink" title="澳新第二题："></a>澳新第二题：</h1><p>[toc]</p><h2 id="简言"><a href="#简言" class="headerlink" title="简言"></a>简言</h2><p>这道todolist卡了我一整天，因为光学那个b站视频缺少大量的知识，于是我还是在网上找了一个学习，不过经历非常失败，我找了个简单的试图把它改成可以本地存储的，但是出现了很奇怪的bug，但最终理清了很多关系，最终找到了这个版本，很快就上手了</p><h2 id="jQuery知识"><a href="#jQuery知识" class="headerlink" title="jQuery知识"></a>jQuery知识</h2><p>最外层 $(function){ …}</p><p>$(‘选择器’).(this)</p><p>parent().children().siblings()这里面可以加选择器</p><p>.first().next().eq(index)</p><p>.addClass().removeClass().html().text()</p><p>.on(‘event’,function(){})  相当于添加监听器</p><p>.find(‘选择器’).filter(‘:first’)</p><p>.closet(‘选择器’)//最近祖先</p><p>.remove().hide().togger().</p><p>if(.is(‘选择器’))</p><p>.prepend(“代码”)超级方便！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.each(arr1,function(i,val)&#123; &#x2F;&#x2F;两个参数，第一个参数表示遍历的数组的下标，第二个参数表示下标对应的值</span><br></pre></td></tr></table></figure><p>val() 方法返回或设置被选元素的 value 属性</p><p>splice(index,number,(new item)) 方法向/从数组中添加/删除项目，然后返回被删除的项目。</p><p>attr() 方法设置或返回被选元素的属性值，俩参数就是设置，一参数就是返回（用于html）</p><p>prop同上，配套removeprop</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个200行项目让我学到了一堆东西，jq的函数就学了20多个，还有localstorage的用法，不过这个项目采用的数据结构感觉怪怪的，应该是我太菜了，json学习链接先放这 [JSON]<a href="https://www.json.org/json-en.html">新建标签页 (json.org)</a> 不过jq比js内置的方便好多啊啊！！！</p><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><p><u>因为没有了解Js一些核心原理，对渲染，更新和执行顺序的概念理解一般，到时候看看红宝书吧！</u></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;澳新第二题：&quot;&gt;&lt;a href=&quot;#澳新第二题：&quot; class=&quot;headerlink&quot; title=&quot;澳新第二题：&quot;&gt;&lt;/a&gt;澳新第二题：&lt;/h1&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;简言&quot;&gt;&lt;a href=&quot;#简言&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    <category term="diary" scheme="http://example.com/categories/diary/"/>
    
    
    <category term="harvest" scheme="http://example.com/tags/harvest/"/>
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="http://example.com/2021/03/06/git/"/>
    <id>http://example.com/2021/03/06/git/</id>
    <published>2021-03-06T12:33:45.000Z</published>
    <updated>2021-03-06T12:34:38.246Z</updated>
    
    <content type="html"><![CDATA[<p>git init</p><p>git status</p><p>git add file</p><p>git commit -m “”</p><p>git log –oneline</p><p>git reflog</p><p>git reset –hard HEAD^(版本号)</p><p>HEAD^^  HEAD~100</p><p>git diff HEAD – file</p><p>查看工作区和版本库不同</p><p>命令<code>git checkout -- readme.txt</code>意思就是，把<code>readme.txt</code>文件在工作区的修改全部撤销，这里有两种情况：</p><p>一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</p><p>一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。</p><p>checkout  -&gt; restore</p><p><code>git checkout</code>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”</p><p><code>git reset HEAD &lt;file&gt;</code>可以把暂存区的修改撤销掉（unstage）</p><p> `git reset HEAD -&gt; git restore –staged</p><p>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</p><p>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作。</p><p>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600/897013573512192">版本回退</a>一节，不过前提是没有推送到远程库。</p><p>远程</p><p>git remote -v</p><p>git remote remove origin</p><p>git remote add origin <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#117;&#98;&#x2e;&#x63;&#111;&#x6d;">&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#117;&#98;&#x2e;&#x63;&#111;&#x6d;</a>:git_username/repository_name.git</p><p>git pull origin master –allow-unrelated-histories</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>git push origin master</p><p>git clone url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;创建 &lt;name&gt; 的分支并切换</span><br><span class="line">git switch -c &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;创建</span><br><span class="line">git branch &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;切换到&lt;name&gt;分支</span><br><span class="line">git checkout &lt;name&gt;</span><br><span class="line">git switch &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看分支树</span><br><span class="line">git branch </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;删除分支</span><br><span class="line">git branch -d &lt;name&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;合并分支 假设这里存在 master ， dev 分支</span><br><span class="line">  &#x2F;&#x2F; 1 切换到要保留的分支——这里是master</span><br><span class="line">  git checkout master</span><br><span class="line">  &#x2F;&#x2F; 2 合并掉分支dev</span><br><span class="line">  git merge dev</span><br></pre></td></tr></table></figure><p><code>git log --graph</code>命令可以看到分支合并图</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;git init&lt;/p&gt;
&lt;p&gt;git status&lt;/p&gt;
&lt;p&gt;git add file&lt;/p&gt;
&lt;p&gt;git commit -m “”&lt;/p&gt;
&lt;p&gt;git log –oneline&lt;/p&gt;
&lt;p&gt;git reflog&lt;/p&gt;
&lt;p&gt;git reset –hard H</summary>
      
    
    
    
    <category term="skills" scheme="http://example.com/categories/skills/"/>
    
    
  </entry>
  
  <entry>
    <title>澳新</title>
    <link href="http://example.com/2021/03/06/%E6%BE%B3%E6%96%B0/"/>
    <id>http://example.com/2021/03/06/%E6%BE%B3%E6%96%B0/</id>
    <published>2021-03-06T06:18:45.000Z</published>
    <updated>2021-03-06T06:19:18.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ANZJointLab-21春季招新题目"><a href="#ANZJointLab-21春季招新题目" class="headerlink" title="ANZJointLab 21春季招新题目"></a>ANZJointLab 21春季招新题目</h1><p>澳新联合实验室致力于校企合作培养具有软件工程实践素养的开发工程师，工作室涉及Web全栈开发方向（Web前端，后端，Flutter跨平台移动端开发，小程序开发），区块链开发方向，以下招新题目面向大一下新生，涉及git，前端，后端，Flutter等方面，一共7道题，1-3道题Web前端知识，第4题移动端Flutter开发知识，5，6题属于Golang后端内容，7属于git，第8题涉及git和前端知识，难度随分数大小递增，和题目顺序无关</p><p>所有题目使用MarkDown文档回答，要求实现截图和按照问题打包的源码压缩文件，每个问题一个压缩包，之后一并打包发送到邮箱<a href="mailto:&#49;&#x35;&#x37;&#50;&#55;&#53;&#52;&#56;&#49;&#48;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#x6d;">&#49;&#x35;&#x37;&#50;&#55;&#53;&#52;&#56;&#49;&#48;&#64;&#x71;&#113;&#x2e;&#x63;&#111;&#x6d;</a> </p><p>期望分数：40+，期望人数：10人</p><h2 id="Question1-HTML-and-CSS"><a href="#Question1-HTML-and-CSS" class="headerlink" title="Question1 HTML and CSS"></a>Question1 HTML and CSS</h2><h3 id="Score-：10"><a href="#Score-：10" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>html和CSS 是标记语言和样式语言，不具有图灵完备，和Word一样简单，是 Web开发的基础，无论是前端还是后端都需要了解基本的html和CSS基础</p><p>这部分建议4h完成</p><p>推荐教程： <a href="https://www.bilibili.com/video/BV17b41137yx">https://www.bilibili.com/video/BV17b41137yx</a> p1~p9</p><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><p>一个150*150的方框(颜色为aqua）在不同分辨率屏幕上下左右居中，鼠标移动到方框上能够改变颜色，同时点击它能够跳转至澳新银行页面。</p><p>澳新银行中国官网url ： <a href="https://institutional.anz.com/markets/china/zh-hans">https://institutional.anz.com/markets/china/zh-hans</a></p><h2 id="Question2-JavaScript（JS-ES"><a href="#Question2-JavaScript（JS-ES" class="headerlink" title="Question2 JavaScript（JS/ES)"></a>Question2 JavaScript（JS/ES)</h2><h3 id="Score-：20"><a href="#Score-：20" class="headerlink" title="Score ：20"></a>Score ：20</h3><h3 id="Introduction-1"><a href="#Introduction-1" class="headerlink" title="Introduction"></a>Introduction</h3><p>JavaScript是网页前端设计的脚本语言，解释型，弱类型，是Web开发必学语言</p><p>这部分建议8h完成</p><p>重点：Js语法，DOM操作</p><p>推荐教程： <a href="https://www.bilibili.com/video/BV17b41137yx">https://www.bilibili.com/video/BV17b41137yx</a> p10 ~ p18 </p><h3 id="Question-1"><a href="#Question-1" class="headerlink" title="Question"></a>Question</h3><p>综合使用html，css，js实现一个简单的待定计划表（ToDoList）要求数据能够本地储存（即关闭网页后再打开时，计划依旧存在，提示：了解Cookie、Session），同时计划表具有增删功能。</p><h2 id="Question3-FrontEnd-Web-Request"><a href="#Question3-FrontEnd-Web-Request" class="headerlink" title="Question3 FrontEnd Web Request"></a>Question3 FrontEnd Web Request</h2><h3 id="Score-：-10"><a href="#Score-：-10" class="headerlink" title="Score ： 10"></a>Score ： 10</h3><h3 id="Introduction-2"><a href="#Introduction-2" class="headerlink" title="Introduction"></a>Introduction</h3><p>前后端交互主要通过前端发送网络请求实现</p><p>发送网络请求有原生的fetchAPI，JQuery，axios等实现方式</p><p>建议选择fetchAPI，JQuery入手学习</p><p>推荐教程： <a href="https://www.bilibili.com/video/BV17b41137yx">https://www.bilibili.com/video/BV17b41137yx</a> p21 ~ p30</p><h3 id="Question-2"><a href="#Question-2" class="headerlink" title="Question"></a>Question</h3><ol><li>向百度官网发送GET请求，把返回的字段显示在页面上，（不必介意看起来很乱）</li><li>什么是RestFulAPi</li></ol><h2 id="Question4-Flutter"><a href="#Question4-Flutter" class="headerlink" title="Question4 Flutter"></a>Question4 Flutter</h2><h3 id="Score-：30"><a href="#Score-：30" class="headerlink" title="Score ：30"></a>Score ：30</h3><h3 id="Introduction-3"><a href="#Introduction-3" class="headerlink" title="Introduction"></a>Introduction</h3><p>Flutter是跨平台移动端开发UI框架，可以实现一套代码编译成安卓软件和Ios软件，基于Dart语言开发</p><p>推荐教程： <a href="https://jspang.com/detailed?id=58">https://jspang.com/detailed?id=58</a></p><h3 id="Question-3"><a href="#Question-3" class="headerlink" title="Question"></a>Question</h3><ol><li>配置好Flutter开发环境（Score：10）</li><li>使用Flutter实现如下功能：<ol><li>三栏Navigation页面<ol><li>一栏显示Hello ANZ + 一个按钮， 点击按钮更新内容为 Hello ANZJointLab</li><li>一栏显示一个滚动列表显示数字1-100</li><li>一栏显示一个图片</li></ol></li></ol></li></ol><h2 id="Question5-GoLang-Web"><a href="#Question5-GoLang-Web" class="headerlink" title="Question5 GoLang Web"></a>Question5 GoLang Web</h2><h3 id="Score-：10-1"><a href="#Score-：10-1" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction-4"><a href="#Introduction-4" class="headerlink" title="Introduction"></a>Introduction</h3><p>GoLang是Web后端的主流语言之一，语言类似于C，易上手，不需要搞懂所有特性，搞懂Go和已经学习的C语言内容的特性+Golang原生http库常用函数就可以上手本题</p><h3 id="Question-4"><a href="#Question-4" class="headerlink" title="Question"></a>Question</h3><p>使用Golang原生部署一个任意静态页面，部署到本地</p><h2 id="Question6-GoLang-Grom"><a href="#Question6-GoLang-Grom" class="headerlink" title="Question6 GoLang Grom"></a>Question6 GoLang Grom</h2><h3 id="Score-：30-40-50"><a href="#Score-：30-40-50" class="headerlink" title="Score ：30/40/50"></a>Score ：30/40/50</h3><h3 id="Introduction-5"><a href="#Introduction-5" class="headerlink" title="Introduction"></a>Introduction</h3><p>数据库和监听网络请求是后端的主要工作，数据库</p><h3 id="Question-5"><a href="#Question-5" class="headerlink" title="Question"></a>Question</h3><p>使用Golang实现一个TodoList网络应用，暴露增删改查接口，连接MySQL数据库实现数据的存储</p><p>部署到本地30分，</p><p>部署到云服务器+10分</p><p>连接前端页面+10分</p><h2 id="Question7-Git-GitHub"><a href="#Question7-Git-GitHub" class="headerlink" title="Question7 Git/GitHub"></a>Question7 Git/GitHub</h2><h3 id="Score-：10-2"><a href="#Score-：10-2" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction-6"><a href="#Introduction-6" class="headerlink" title="Introduction"></a>Introduction</h3><p>git是团队合作开发必须使用的版本管理工具</p><p>主要学习：文件监听，版本回溯，分支管理，远程仓库</p><h3 id="Question-6"><a href="#Question-6" class="headerlink" title="Question"></a>Question</h3><p>创建一个公开的Github仓库，与本地仓库链接，新建两个分支</p><h2 id="Question8-Build-Your-Own-Blog"><a href="#Question8-Build-Your-Own-Blog" class="headerlink" title="Question8 Build Your Own Blog"></a>Question8 Build Your Own Blog</h2><h3 id="Score-：10-3"><a href="#Score-：10-3" class="headerlink" title="Score ：10"></a>Score ：10</h3><h3 id="Introduction-7"><a href="#Introduction-7" class="headerlink" title="Introduction"></a>Introduction</h3><p>写技术博客树知识内化和方式，也是向别人展示你的知识技能的手段，使用Hexo和gitPage可以快速简单的搭建自己的技术博客</p><p>参考文章：</p><p><a href="https://blog.csdn.net/grave2015/article/details/79961843">https://blog.csdn.net/grave2015/article/details/79961843</a></p><h3 id="Question-7"><a href="#Question-7" class="headerlink" title="Question"></a>Question</h3><p>搭建自己的技术博客，附带链接，方式不限于Hexo + gitPage</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ANZJointLab-21春季招新题目&quot;&gt;&lt;a href=&quot;#ANZJointLab-21春季招新题目&quot; class=&quot;headerlink&quot; title=&quot;ANZJointLab 21春季招新题目&quot;&gt;&lt;/a&gt;ANZJointLab 21春季招新题目&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="others" scheme="http://example.com/categories/others/"/>
    
    
    <category term="澳新" scheme="http://example.com/tags/%E6%BE%B3%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>first</title>
    <link href="http://example.com/2021/03/06/first/"/>
    <id>http://example.com/2021/03/06/first/</id>
    <published>2021-03-06T02:58:38.000Z</published>
    <updated>2021-03-06T06:17:49.249Z</updated>
    
    <content type="html"><![CDATA[<p>第一个博文！！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一个博文！！！&lt;/p&gt;
</summary>
      
    
    
    
    <category term="diary" scheme="http://example.com/categories/diary/"/>
    
    
    <category term="FIRST" scheme="http://example.com/tags/FIRST/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/03/06/hello-world/"/>
    <id>http://example.com/2021/03/06/hello-world/</id>
    <published>2021-03-06T02:52:24.790Z</published>
    <updated>2021-03-06T04:04:34.865Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="others" scheme="http://example.com/categories/others/"/>
    
    
  </entry>
  
</feed>
